-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------

state 110 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Fun                                (0)
	Fun -> fun main '(' ')' '{' Commands '}'           (1)
	Commands -> Command ';' Commands                   (2)
	Commands -> Command Commands                       (3)
	Commands ->                                        (4)
	Command -> Decl                                    (5)
	Command -> Assign                                  (6)
	Command -> Expr                                    (7)
	Command -> If                                      (8)
	Command -> While                                   (9)
	Command -> Print                                   (10)
	Command -> Readln                                  (11)
	Print -> print '(' InitExp ')'                     (12)
	Readln -> readln '(' ')'                           (13)
	If -> if '(' Expr ')' Aux_if                       (14)
	If -> if '(' Expr ')' Aux_if else Aux_if           (15)
	Aux_if -> Command                                  (16)
	Aux_if -> '{' Commands '}'                         (17)
	While -> while '(' Expr ')' Command                (18)
	While -> while '(' Expr ')' '{' Commands '}'       (19)
	Type -> int                                        (20)
	Type -> float                                      (21)
	Type -> boolean                                    (22)
	Type -> string                                     (23)
	InitExp -> Expr                                    (24)
	InitExp -> Sexp                                    (25)
	InitExp -> Readln                                  (26)
	Decl -> var id '=' InitExp                         (27)
	Decl -> val id '=' InitExp                         (28)
	Decl -> var id ':' Type '=' InitExp                (29)
	Decl -> val id ':' Type '=' InitExp                (30)
	Assign -> id '=' Expr                              (31)
	Assign -> id "+=" Expr                             (32)
	Assign -> id "-=" Expr                             (33)
	Assign -> id "*=" Expr                             (34)
	Assign -> id "/=" Expr                             (35)
	Assign -> id "%=" Expr                             (36)
	Expr -> Expr '+' Expr                              (37)
	Expr -> Expr '-' Expr                              (38)
	Expr -> Expr '*' Expr                              (39)
	Expr -> Expr '/' Expr                              (40)
	Expr -> Expr '%' Expr                              (41)
	Expr -> PostIncDecExp                              (42)
	Expr -> Expr "&&" Expr                             (43)
	Expr -> Expr "||" Expr                             (44)
	Expr -> Expr '>' Expr                              (45)
	Expr -> Expr ">=" Expr                             (46)
	Expr -> Expr '<' Expr                              (47)
	Expr -> Expr "<=" Expr                             (48)
	Expr -> Expr "==" Expr                             (49)
	Expr -> Expr "!=" Expr                             (50)
	Expr -> '!' Expr                                   (51)
	Expr -> Atomic                                     (52)
	PostIncDecExp -> id "++"                           (53)
	PostIncDecExp -> id "--"                           (54)
	Atomic -> id                                       (55)
	Atomic -> num                                      (56)
	Atomic -> real                                     (57)
	Atomic -> true                                     (58)
	Atomic -> false                                    (59)
	Atomic -> '(' Expr ')'                             (60)
	Sexp -> str                                        (61)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { ID $$ }
	num            { NUM $$ }
	real           { REAL $$ }
	str            { STR $$ }
	'('            { LPAREN }
	')'            { RPAREN }
	'{'            { LBRACE }
	'}'            { RBRACE }
	';'            { SEMICOLON }
	if             { IF }
	else           { ELSE }
	while          { WHILE }
	int            { INT }
	float          { FLOAT }
	boolean        { BOOLEAN }
	string         { STRING }
	fun            { FUN }
	main           { MAIN }
	val            { VAL }
	var            { VAR }
	'+'            { PLUS }
	'-'            { MINUS }
	'*'            { MULT }
	'/'            { DIV }
	'%'            { MOD }
	'>'            { G }
	">="           { GEQ }
	'<'            { L }
	"<="           { LEQ }
	"=="           { EQUAL }
	"!="           { NEQUAL }
	"&&"           { AND }
	"||"           { OR }
	'!'            { NOT }
	"++"           { ICR }
	"--"           { DCR }
	'='            { ATRIB }
	"+="           { ATRIB_PLUS }
	"-="           { ATRIB_MINUS }
	"*="           { ATRIB_MULT }
	"/="           { ATRIB_DIV }
	"%="           { ATRIB_MOD }
	true           { TRUE }
	false          { FALSE }
	readln         { READLN }
	print          { PRINT }
	':'            { COLON }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Fun             rule  1
	Commands        rules 2, 3, 4
	Command         rules 5, 6, 7, 8, 9, 10, 11
	Print           rule  12
	Readln          rule  13
	If              rules 14, 15
	Aux_if          rules 16, 17
	While           rules 18, 19
	Type            rules 20, 21, 22, 23
	InitExp         rules 24, 25, 26
	Decl            rules 27, 28, 29, 30
	Assign          rules 31, 32, 33, 34, 35, 36
	Expr            rules 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
	PostIncDecExp   rules 53, 54
	Atomic          rules 55, 56, 57, 58, 59, 60
	Sexp            rule  61

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	fun            shift, and enter state 2

	Fun            goto state 3

State 1


	fun            shift, and enter state 2


State 2

	Fun -> fun . main '(' ')' '{' Commands '}'          (rule 1)

	main           shift, and enter state 4


State 3

	%start_parse -> Fun .                               (rule 0)

	%eof           accept


State 4

	Fun -> fun main . '(' ')' '{' Commands '}'          (rule 1)

	'('            shift, and enter state 5


State 5

	Fun -> fun main '(' . ')' '{' Commands '}'          (rule 1)

	')'            shift, and enter state 6


State 6

	Fun -> fun main '(' ')' . '{' Commands '}'          (rule 1)

	'{'            shift, and enter state 7


State 7

	Fun -> fun main '(' ')' '{' . Commands '}'          (rule 1)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'}'            reduce using rule 4
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Commands       goto state 8
	Command        goto state 9
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 8

	Fun -> fun main '(' ')' '{' Commands . '}'          (rule 1)

	'}'            shift, and enter state 64


State 9

	Commands -> Command . ';' Commands                  (rule 2)
	Commands -> Command . Commands                      (rule 3)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'}'            reduce using rule 4
	';'            shift, and enter state 63
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Commands       goto state 62
	Command        goto state 9
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 10

	Command -> Print .                                  (rule 10)

	id             reduce using rule 10
	num            reduce using rule 10
	real           reduce using rule 10
	'('            reduce using rule 10
	'}'            reduce using rule 10
	';'            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	val            reduce using rule 10
	var            reduce using rule 10
	'!'            reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	readln         reduce using rule 10
	print          reduce using rule 10


State 11

	Command -> Readln .                                 (rule 11)

	id             reduce using rule 11
	num            reduce using rule 11
	real           reduce using rule 11
	'('            reduce using rule 11
	'}'            reduce using rule 11
	';'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	val            reduce using rule 11
	var            reduce using rule 11
	'!'            reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	readln         reduce using rule 11
	print          reduce using rule 11


State 12

	Command -> If .                                     (rule 8)

	id             reduce using rule 8
	num            reduce using rule 8
	real           reduce using rule 8
	'('            reduce using rule 8
	'}'            reduce using rule 8
	';'            reduce using rule 8
	if             reduce using rule 8
	else           reduce using rule 8
	while          reduce using rule 8
	val            reduce using rule 8
	var            reduce using rule 8
	'!'            reduce using rule 8
	true           reduce using rule 8
	false          reduce using rule 8
	readln         reduce using rule 8
	print          reduce using rule 8


State 13

	Command -> While .                                  (rule 9)

	id             reduce using rule 9
	num            reduce using rule 9
	real           reduce using rule 9
	'('            reduce using rule 9
	'}'            reduce using rule 9
	';'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	val            reduce using rule 9
	var            reduce using rule 9
	'!'            reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	readln         reduce using rule 9
	print          reduce using rule 9


State 14

	Command -> Decl .                                   (rule 5)

	id             reduce using rule 5
	num            reduce using rule 5
	real           reduce using rule 5
	'('            reduce using rule 5
	'}'            reduce using rule 5
	';'            reduce using rule 5
	if             reduce using rule 5
	else           reduce using rule 5
	while          reduce using rule 5
	val            reduce using rule 5
	var            reduce using rule 5
	'!'            reduce using rule 5
	true           reduce using rule 5
	false          reduce using rule 5
	readln         reduce using rule 5
	print          reduce using rule 5


State 15

	Command -> Assign .                                 (rule 6)

	id             reduce using rule 6
	num            reduce using rule 6
	real           reduce using rule 6
	'('            reduce using rule 6
	'}'            reduce using rule 6
	';'            reduce using rule 6
	if             reduce using rule 6
	else           reduce using rule 6
	while          reduce using rule 6
	val            reduce using rule 6
	var            reduce using rule 6
	'!'            reduce using rule 6
	true           reduce using rule 6
	false          reduce using rule 6
	readln         reduce using rule 6
	print          reduce using rule 6


State 16

	Command -> Expr .                                   (rule 7)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 7
	num            reduce using rule 7
	real           reduce using rule 7
	'('            reduce using rule 7
	'}'            reduce using rule 7
	';'            reduce using rule 7
	if             reduce using rule 7
	else           reduce using rule 7
	while          reduce using rule 7
	val            reduce using rule 7
	var            reduce using rule 7
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 7
	true           reduce using rule 7
	false          reduce using rule 7
	readln         reduce using rule 7
	print          reduce using rule 7


State 17

	Expr -> PostIncDecExp .                             (rule 42)

	id             reduce using rule 42
	num            reduce using rule 42
	real           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	if             reduce using rule 42
	else           reduce using rule 42
	while          reduce using rule 42
	val            reduce using rule 42
	var            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'%'            reduce using rule 42
	'>'            reduce using rule 42
	">="           reduce using rule 42
	'<'            reduce using rule 42
	"<="           reduce using rule 42
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42
	'!'            reduce using rule 42
	true           reduce using rule 42
	false          reduce using rule 42
	readln         reduce using rule 42
	print          reduce using rule 42


State 18

	Expr -> Atomic .                                    (rule 52)

	id             reduce using rule 52
	num            reduce using rule 52
	real           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52
	if             reduce using rule 52
	else           reduce using rule 52
	while          reduce using rule 52
	val            reduce using rule 52
	var            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'>'            reduce using rule 52
	">="           reduce using rule 52
	'<'            reduce using rule 52
	"<="           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	"&&"           reduce using rule 52
	"||"           reduce using rule 52
	'!'            reduce using rule 52
	true           reduce using rule 52
	false          reduce using rule 52
	readln         reduce using rule 52
	print          reduce using rule 52


State 19

	Assign -> id . '=' Expr                             (rule 31)
	Assign -> id . "+=" Expr                            (rule 32)
	Assign -> id . "-=" Expr                            (rule 33)
	Assign -> id . "*=" Expr                            (rule 34)
	Assign -> id . "/=" Expr                            (rule 35)
	Assign -> id . "%=" Expr                            (rule 36)
	PostIncDecExp -> id . "++"                          (rule 53)
	PostIncDecExp -> id . "--"                          (rule 54)
	Atomic -> id .                                      (rule 55)

	id             reduce using rule 55
	num            reduce using rule 55
	real           reduce using rule 55
	'('            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55
	if             reduce using rule 55
	else           reduce using rule 55
	while          reduce using rule 55
	val            reduce using rule 55
	var            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'>'            reduce using rule 55
	">="           reduce using rule 55
	'<'            reduce using rule 55
	"<="           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	'!'            reduce using rule 55
	"++"           shift, and enter state 41
	"--"           shift, and enter state 42
	'='            shift, and enter state 43
	"+="           shift, and enter state 44
	"-="           shift, and enter state 45
	"*="           shift, and enter state 46
	"/="           shift, and enter state 47
	"%="           shift, and enter state 48
	true           reduce using rule 55
	false          reduce using rule 55
	readln         reduce using rule 55
	print          reduce using rule 55


State 20

	Atomic -> num .                                     (rule 56)

	id             reduce using rule 56
	num            reduce using rule 56
	real           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56
	if             reduce using rule 56
	else           reduce using rule 56
	while          reduce using rule 56
	val            reduce using rule 56
	var            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'>'            reduce using rule 56
	">="           reduce using rule 56
	'<'            reduce using rule 56
	"<="           reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"&&"           reduce using rule 56
	"||"           reduce using rule 56
	'!'            reduce using rule 56
	true           reduce using rule 56
	false          reduce using rule 56
	readln         reduce using rule 56
	print          reduce using rule 56


State 21

	Atomic -> real .                                    (rule 57)

	id             reduce using rule 57
	num            reduce using rule 57
	real           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57
	if             reduce using rule 57
	else           reduce using rule 57
	while          reduce using rule 57
	val            reduce using rule 57
	var            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'>'            reduce using rule 57
	">="           reduce using rule 57
	'<'            reduce using rule 57
	"<="           reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"&&"           reduce using rule 57
	"||"           reduce using rule 57
	'!'            reduce using rule 57
	true           reduce using rule 57
	false          reduce using rule 57
	readln         reduce using rule 57
	print          reduce using rule 57


State 22

	Atomic -> '(' . Expr ')'                            (rule 60)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 40
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 23

	If -> if . '(' Expr ')' Aux_if                      (rule 14)
	If -> if . '(' Expr ')' Aux_if else Aux_if          (rule 15)

	'('            shift, and enter state 39


State 24

	While -> while . '(' Expr ')' Command               (rule 18)
	While -> while . '(' Expr ')' '{' Commands '}'      (rule 19)

	'('            shift, and enter state 38


State 25

	Decl -> val . id '=' InitExp                        (rule 28)
	Decl -> val . id ':' Type '=' InitExp               (rule 30)

	id             shift, and enter state 37


State 26

	Decl -> var . id '=' InitExp                        (rule 27)
	Decl -> var . id ':' Type '=' InitExp               (rule 29)

	id             shift, and enter state 36


State 27

	Expr -> '!' . Expr                                  (rule 51)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 34
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 28

	Atomic -> true .                                    (rule 58)

	id             reduce using rule 58
	num            reduce using rule 58
	real           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58
	if             reduce using rule 58
	else           reduce using rule 58
	while          reduce using rule 58
	val            reduce using rule 58
	var            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'>'            reduce using rule 58
	">="           reduce using rule 58
	'<'            reduce using rule 58
	"<="           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"&&"           reduce using rule 58
	"||"           reduce using rule 58
	'!'            reduce using rule 58
	true           reduce using rule 58
	false          reduce using rule 58
	readln         reduce using rule 58
	print          reduce using rule 58


State 29

	Atomic -> false .                                   (rule 59)

	id             reduce using rule 59
	num            reduce using rule 59
	real           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59
	if             reduce using rule 59
	else           reduce using rule 59
	while          reduce using rule 59
	val            reduce using rule 59
	var            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'>'            reduce using rule 59
	">="           reduce using rule 59
	'<'            reduce using rule 59
	"<="           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"&&"           reduce using rule 59
	"||"           reduce using rule 59
	'!'            reduce using rule 59
	true           reduce using rule 59
	false          reduce using rule 59
	readln         reduce using rule 59
	print          reduce using rule 59


State 30

	Readln -> readln . '(' ')'                          (rule 13)

	'('            shift, and enter state 33


State 31

	Print -> print . '(' InitExp ')'                    (rule 12)

	'('            shift, and enter state 32


State 32

	Print -> print '(' . InitExp ')'                    (rule 12)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	str            shift, and enter state 97
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30

	Readln         goto state 93
	InitExp        goto state 94
	Expr           goto state 95
	PostIncDecExp  goto state 17
	Atomic         goto state 18
	Sexp           goto state 96

State 33

	Readln -> readln '(' . ')'                          (rule 13)

	')'            shift, and enter state 92


State 34

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)
	Expr -> '!' Expr .                                  (rule 51)

	id             reduce using rule 51
	num            reduce using rule 51
	real           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51
	if             reduce using rule 51
	else           reduce using rule 51
	while          reduce using rule 51
	val            reduce using rule 51
	var            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'>'            reduce using rule 51
	">="           reduce using rule 51
	'<'            reduce using rule 51
	"<="           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"&&"           reduce using rule 51
	"||"           reduce using rule 51
	'!'            reduce using rule 51
	true           reduce using rule 51
	false          reduce using rule 51
	readln         reduce using rule 51
	print          reduce using rule 51


State 35

	PostIncDecExp -> id . "++"                          (rule 53)
	PostIncDecExp -> id . "--"                          (rule 54)
	Atomic -> id .                                      (rule 55)

	id             reduce using rule 55
	num            reduce using rule 55
	real           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55
	if             reduce using rule 55
	else           reduce using rule 55
	while          reduce using rule 55
	val            reduce using rule 55
	var            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'>'            reduce using rule 55
	">="           reduce using rule 55
	'<'            reduce using rule 55
	"<="           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	'!'            reduce using rule 55
	"++"           shift, and enter state 41
	"--"           shift, and enter state 42
	true           reduce using rule 55
	false          reduce using rule 55
	readln         reduce using rule 55
	print          reduce using rule 55


State 36

	Decl -> var id . '=' InitExp                        (rule 27)
	Decl -> var id . ':' Type '=' InitExp               (rule 29)

	'='            shift, and enter state 90
	':'            shift, and enter state 91


State 37

	Decl -> val id . '=' InitExp                        (rule 28)
	Decl -> val id . ':' Type '=' InitExp               (rule 30)

	'='            shift, and enter state 88
	':'            shift, and enter state 89


State 38

	While -> while '(' . Expr ')' Command               (rule 18)
	While -> while '(' . Expr ')' '{' Commands '}'      (rule 19)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 87
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 39

	If -> if '(' . Expr ')' Aux_if                      (rule 14)
	If -> if '(' . Expr ')' Aux_if else Aux_if          (rule 15)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 86
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 40

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)
	Atomic -> '(' Expr . ')'                            (rule 60)

	')'            shift, and enter state 85
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61


State 41

	PostIncDecExp -> id "++" .                          (rule 53)

	id             reduce using rule 53
	num            reduce using rule 53
	real           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53
	if             reduce using rule 53
	else           reduce using rule 53
	while          reduce using rule 53
	val            reduce using rule 53
	var            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'>'            reduce using rule 53
	">="           reduce using rule 53
	'<'            reduce using rule 53
	"<="           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"&&"           reduce using rule 53
	"||"           reduce using rule 53
	'!'            reduce using rule 53
	true           reduce using rule 53
	false          reduce using rule 53
	readln         reduce using rule 53
	print          reduce using rule 53


State 42

	PostIncDecExp -> id "--" .                          (rule 54)

	id             reduce using rule 54
	num            reduce using rule 54
	real           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	';'            reduce using rule 54
	if             reduce using rule 54
	else           reduce using rule 54
	while          reduce using rule 54
	val            reduce using rule 54
	var            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'>'            reduce using rule 54
	">="           reduce using rule 54
	'<'            reduce using rule 54
	"<="           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"&&"           reduce using rule 54
	"||"           reduce using rule 54
	'!'            reduce using rule 54
	true           reduce using rule 54
	false          reduce using rule 54
	readln         reduce using rule 54
	print          reduce using rule 54


State 43

	Assign -> id '=' . Expr                             (rule 31)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 84
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 44

	Assign -> id "+=" . Expr                            (rule 32)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 83
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 45

	Assign -> id "-=" . Expr                            (rule 33)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 82
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 46

	Assign -> id "*=" . Expr                            (rule 34)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 81
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 47

	Assign -> id "/=" . Expr                            (rule 35)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 80
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 48

	Assign -> id "%=" . Expr                            (rule 36)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 79
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 49

	Expr -> Expr '+' . Expr                             (rule 37)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 78
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 50

	Expr -> Expr '-' . Expr                             (rule 38)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 77
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 51

	Expr -> Expr '*' . Expr                             (rule 39)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 76
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 52

	Expr -> Expr '/' . Expr                             (rule 40)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 75
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 53

	Expr -> Expr '%' . Expr                             (rule 41)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 74
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 54

	Expr -> Expr '>' . Expr                             (rule 45)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 73
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 55

	Expr -> Expr ">=" . Expr                            (rule 46)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 72
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 56

	Expr -> Expr '<' . Expr                             (rule 47)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 71
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 57

	Expr -> Expr "<=" . Expr                            (rule 48)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 70
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 58

	Expr -> Expr "==" . Expr                            (rule 49)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 69
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 59

	Expr -> Expr "!=" . Expr                            (rule 50)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 68
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 60

	Expr -> Expr "&&" . Expr                            (rule 43)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 67
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 61

	Expr -> Expr "||" . Expr                            (rule 44)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29

	Expr           goto state 66
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 62

	Commands -> Command Commands .                      (rule 3)

	'}'            reduce using rule 3


State 63

	Commands -> Command ';' . Commands                  (rule 2)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'}'            reduce using rule 4
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Commands       goto state 65
	Command        goto state 9
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 64

	Fun -> fun main '(' ')' '{' Commands '}' .          (rule 1)

	%eof           reduce using rule 1


State 65

	Commands -> Command ';' Commands .                  (rule 2)

	'}'            reduce using rule 2


State 66

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr "||" Expr .                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 44
	num            reduce using rule 44
	real           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	if             reduce using rule 44
	else           reduce using rule 44
	while          reduce using rule 44
	val            reduce using rule 44
	var            reduce using rule 44
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           reduce using rule 44
	'!'            reduce using rule 44
	true           reduce using rule 44
	false          reduce using rule 44
	readln         reduce using rule 44
	print          reduce using rule 44


State 67

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr "&&" Expr .                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 43
	num            reduce using rule 43
	real           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	if             reduce using rule 43
	else           reduce using rule 43
	while          reduce using rule 43
	val            reduce using rule 43
	var            reduce using rule 43
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           reduce using rule 43
	"||"           reduce using rule 43
	'!'            reduce using rule 43
	true           reduce using rule 43
	false          reduce using rule 43
	readln         reduce using rule 43
	print          reduce using rule 43


State 68

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)
	Expr -> Expr "!=" Expr .                            (rule 50)

	id             reduce using rule 50
	num            reduce using rule 50
	real           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50
	if             reduce using rule 50
	else           reduce using rule 50
	while          reduce using rule 50
	val            reduce using rule 50
	var            reduce using rule 50
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 50
	"||"           reduce using rule 50
	'!'            reduce using rule 50
	true           reduce using rule 50
	false          reduce using rule 50
	readln         reduce using rule 50
	print          reduce using rule 50


State 69

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr "==" Expr .                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 49
	num            reduce using rule 49
	real           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	if             reduce using rule 49
	else           reduce using rule 49
	while          reduce using rule 49
	val            reduce using rule 49
	var            reduce using rule 49
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 49
	"||"           reduce using rule 49
	'!'            reduce using rule 49
	true           reduce using rule 49
	false          reduce using rule 49
	readln         reduce using rule 49
	print          reduce using rule 49


State 70

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr "<=" Expr .                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 48
	num            reduce using rule 48
	real           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	if             reduce using rule 48
	else           reduce using rule 48
	while          reduce using rule 48
	val            reduce using rule 48
	var            reduce using rule 48
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48
	'!'            reduce using rule 48
	true           reduce using rule 48
	false          reduce using rule 48
	readln         reduce using rule 48
	print          reduce using rule 48


State 71

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr '<' Expr .                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 47
	num            reduce using rule 47
	real           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	if             reduce using rule 47
	else           reduce using rule 47
	while          reduce using rule 47
	val            reduce using rule 47
	var            reduce using rule 47
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47
	'!'            reduce using rule 47
	true           reduce using rule 47
	false          reduce using rule 47
	readln         reduce using rule 47
	print          reduce using rule 47


State 72

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr ">=" Expr .                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 46
	num            reduce using rule 46
	real           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	if             reduce using rule 46
	else           reduce using rule 46
	while          reduce using rule 46
	val            reduce using rule 46
	var            reduce using rule 46
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	"&&"           reduce using rule 46
	"||"           reduce using rule 46
	'!'            reduce using rule 46
	true           reduce using rule 46
	false          reduce using rule 46
	readln         reduce using rule 46
	print          reduce using rule 46


State 73

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr '>' Expr .                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 45
	num            reduce using rule 45
	real           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	if             reduce using rule 45
	else           reduce using rule 45
	while          reduce using rule 45
	val            reduce using rule 45
	var            reduce using rule 45
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	"&&"           reduce using rule 45
	"||"           reduce using rule 45
	'!'            reduce using rule 45
	true           reduce using rule 45
	false          reduce using rule 45
	readln         reduce using rule 45
	print          reduce using rule 45


State 74

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr '%' Expr .                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 41
	num            reduce using rule 41
	real           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	if             reduce using rule 41
	else           reduce using rule 41
	while          reduce using rule 41
	val            reduce using rule 41
	var            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'%'            reduce using rule 41
	'>'            reduce using rule 41
	">="           reduce using rule 41
	'<'            reduce using rule 41
	"<="           reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	"&&"           reduce using rule 41
	"||"           reduce using rule 41
	'!'            reduce using rule 41
	true           reduce using rule 41
	false          reduce using rule 41
	readln         reduce using rule 41
	print          reduce using rule 41


State 75

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr '/' Expr .                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 40
	num            reduce using rule 40
	real           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	if             reduce using rule 40
	else           reduce using rule 40
	while          reduce using rule 40
	val            reduce using rule 40
	var            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'%'            reduce using rule 40
	'>'            reduce using rule 40
	">="           reduce using rule 40
	'<'            reduce using rule 40
	"<="           reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	"&&"           reduce using rule 40
	"||"           reduce using rule 40
	'!'            reduce using rule 40
	true           reduce using rule 40
	false          reduce using rule 40
	readln         reduce using rule 40
	print          reduce using rule 40


State 76

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr '*' Expr .                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 39
	num            reduce using rule 39
	real           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	if             reduce using rule 39
	else           reduce using rule 39
	while          reduce using rule 39
	val            reduce using rule 39
	var            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'%'            reduce using rule 39
	'>'            reduce using rule 39
	">="           reduce using rule 39
	'<'            reduce using rule 39
	"<="           reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	"&&"           reduce using rule 39
	"||"           reduce using rule 39
	'!'            reduce using rule 39
	true           reduce using rule 39
	false          reduce using rule 39
	readln         reduce using rule 39
	print          reduce using rule 39


State 77

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr '-' Expr .                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 38
	num            reduce using rule 38
	real           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	if             reduce using rule 38
	else           reduce using rule 38
	while          reduce using rule 38
	val            reduce using rule 38
	var            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            reduce using rule 38
	">="           reduce using rule 38
	'<'            reduce using rule 38
	"<="           reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	"&&"           reduce using rule 38
	"||"           reduce using rule 38
	'!'            reduce using rule 38
	true           reduce using rule 38
	false          reduce using rule 38
	readln         reduce using rule 38
	print          reduce using rule 38


State 78

	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr '+' Expr .                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 37
	num            reduce using rule 37
	real           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	while          reduce using rule 37
	val            reduce using rule 37
	var            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            reduce using rule 37
	">="           reduce using rule 37
	'<'            reduce using rule 37
	"<="           reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	"&&"           reduce using rule 37
	"||"           reduce using rule 37
	'!'            reduce using rule 37
	true           reduce using rule 37
	false          reduce using rule 37
	readln         reduce using rule 37
	print          reduce using rule 37


State 79

	Assign -> id "%=" Expr .                            (rule 36)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 36
	num            reduce using rule 36
	real           reduce using rule 36
	'('            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	while          reduce using rule 36
	val            reduce using rule 36
	var            reduce using rule 36
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 36
	true           reduce using rule 36
	false          reduce using rule 36
	readln         reduce using rule 36
	print          reduce using rule 36


State 80

	Assign -> id "/=" Expr .                            (rule 35)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 35
	num            reduce using rule 35
	real           reduce using rule 35
	'('            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	while          reduce using rule 35
	val            reduce using rule 35
	var            reduce using rule 35
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 35
	true           reduce using rule 35
	false          reduce using rule 35
	readln         reduce using rule 35
	print          reduce using rule 35


State 81

	Assign -> id "*=" Expr .                            (rule 34)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 34
	num            reduce using rule 34
	real           reduce using rule 34
	'('            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	while          reduce using rule 34
	val            reduce using rule 34
	var            reduce using rule 34
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	readln         reduce using rule 34
	print          reduce using rule 34


State 82

	Assign -> id "-=" Expr .                            (rule 33)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 33
	num            reduce using rule 33
	real           reduce using rule 33
	'('            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	if             reduce using rule 33
	else           reduce using rule 33
	while          reduce using rule 33
	val            reduce using rule 33
	var            reduce using rule 33
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	readln         reduce using rule 33
	print          reduce using rule 33


State 83

	Assign -> id "+=" Expr .                            (rule 32)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 32
	num            reduce using rule 32
	real           reduce using rule 32
	'('            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	if             reduce using rule 32
	else           reduce using rule 32
	while          reduce using rule 32
	val            reduce using rule 32
	var            reduce using rule 32
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	readln         reduce using rule 32
	print          reduce using rule 32


State 84

	Assign -> id '=' Expr .                             (rule 31)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 31
	num            reduce using rule 31
	real           reduce using rule 31
	'('            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	if             reduce using rule 31
	else           reduce using rule 31
	while          reduce using rule 31
	val            reduce using rule 31
	var            reduce using rule 31
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	readln         reduce using rule 31
	print          reduce using rule 31


State 85

	Atomic -> '(' Expr ')' .                            (rule 60)

	id             reduce using rule 60
	num            reduce using rule 60
	real           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60
	if             reduce using rule 60
	else           reduce using rule 60
	while          reduce using rule 60
	val            reduce using rule 60
	var            reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'%'            reduce using rule 60
	'>'            reduce using rule 60
	">="           reduce using rule 60
	'<'            reduce using rule 60
	"<="           reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"&&"           reduce using rule 60
	"||"           reduce using rule 60
	'!'            reduce using rule 60
	true           reduce using rule 60
	false          reduce using rule 60
	readln         reduce using rule 60
	print          reduce using rule 60


State 86

	If -> if '(' Expr . ')' Aux_if                      (rule 14)
	If -> if '(' Expr . ')' Aux_if else Aux_if          (rule 15)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	')'            shift, and enter state 108
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61


State 87

	While -> while '(' Expr . ')' Command               (rule 18)
	While -> while '(' Expr . ')' '{' Commands '}'      (rule 19)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	')'            shift, and enter state 107
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61


State 88

	Decl -> val id '=' . InitExp                        (rule 28)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	str            shift, and enter state 97
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30

	Readln         goto state 93
	InitExp        goto state 106
	Expr           goto state 95
	PostIncDecExp  goto state 17
	Atomic         goto state 18
	Sexp           goto state 96

State 89

	Decl -> val id ':' . Type '=' InitExp               (rule 30)

	int            shift, and enter state 100
	float          shift, and enter state 101
	boolean        shift, and enter state 102
	string         shift, and enter state 103

	Type           goto state 105

State 90

	Decl -> var id '=' . InitExp                        (rule 27)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	str            shift, and enter state 97
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30

	Readln         goto state 93
	InitExp        goto state 104
	Expr           goto state 95
	PostIncDecExp  goto state 17
	Atomic         goto state 18
	Sexp           goto state 96

State 91

	Decl -> var id ':' . Type '=' InitExp               (rule 29)

	int            shift, and enter state 100
	float          shift, and enter state 101
	boolean        shift, and enter state 102
	string         shift, and enter state 103

	Type           goto state 99

State 92

	Readln -> readln '(' ')' .                          (rule 13)

	id             reduce using rule 13
	num            reduce using rule 13
	real           reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	val            reduce using rule 13
	var            reduce using rule 13
	'!'            reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	readln         reduce using rule 13
	print          reduce using rule 13


State 93

	InitExp -> Readln .                                 (rule 26)

	id             reduce using rule 26
	num            reduce using rule 26
	real           reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'}'            reduce using rule 26
	';'            reduce using rule 26
	if             reduce using rule 26
	else           reduce using rule 26
	while          reduce using rule 26
	val            reduce using rule 26
	var            reduce using rule 26
	'!'            reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	readln         reduce using rule 26
	print          reduce using rule 26


State 94

	Print -> print '(' InitExp . ')'                    (rule 12)

	')'            shift, and enter state 98


State 95

	InitExp -> Expr .                                   (rule 24)
	Expr -> Expr . '+' Expr                             (rule 37)
	Expr -> Expr . '-' Expr                             (rule 38)
	Expr -> Expr . '*' Expr                             (rule 39)
	Expr -> Expr . '/' Expr                             (rule 40)
	Expr -> Expr . '%' Expr                             (rule 41)
	Expr -> Expr . "&&" Expr                            (rule 43)
	Expr -> Expr . "||" Expr                            (rule 44)
	Expr -> Expr . '>' Expr                             (rule 45)
	Expr -> Expr . ">=" Expr                            (rule 46)
	Expr -> Expr . '<' Expr                             (rule 47)
	Expr -> Expr . "<=" Expr                            (rule 48)
	Expr -> Expr . "==" Expr                            (rule 49)
	Expr -> Expr . "!=" Expr                            (rule 50)

	id             reduce using rule 24
	num            reduce using rule 24
	real           reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24
	if             reduce using rule 24
	else           reduce using rule 24
	while          reduce using rule 24
	val            reduce using rule 24
	var            reduce using rule 24
	'+'            shift, and enter state 49
	'-'            shift, and enter state 50
	'*'            shift, and enter state 51
	'/'            shift, and enter state 52
	'%'            shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	'<'            shift, and enter state 56
	"<="           shift, and enter state 57
	"=="           shift, and enter state 58
	"!="           shift, and enter state 59
	"&&"           shift, and enter state 60
	"||"           shift, and enter state 61
	'!'            reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	readln         reduce using rule 24
	print          reduce using rule 24


State 96

	InitExp -> Sexp .                                   (rule 25)

	id             reduce using rule 25
	num            reduce using rule 25
	real           reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'}'            reduce using rule 25
	';'            reduce using rule 25
	if             reduce using rule 25
	else           reduce using rule 25
	while          reduce using rule 25
	val            reduce using rule 25
	var            reduce using rule 25
	'!'            reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	readln         reduce using rule 25
	print          reduce using rule 25


State 97

	Sexp -> str .                                       (rule 61)

	id             reduce using rule 61
	num            reduce using rule 61
	real           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61
	if             reduce using rule 61
	else           reduce using rule 61
	while          reduce using rule 61
	val            reduce using rule 61
	var            reduce using rule 61
	'!'            reduce using rule 61
	true           reduce using rule 61
	false          reduce using rule 61
	readln         reduce using rule 61
	print          reduce using rule 61


State 98

	Print -> print '(' InitExp ')' .                    (rule 12)

	id             reduce using rule 12
	num            reduce using rule 12
	real           reduce using rule 12
	'('            reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	val            reduce using rule 12
	var            reduce using rule 12
	'!'            reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	readln         reduce using rule 12
	print          reduce using rule 12


State 99

	Decl -> var id ':' Type . '=' InitExp               (rule 29)

	'='            shift, and enter state 115


State 100

	Type -> int .                                       (rule 20)

	'='            reduce using rule 20


State 101

	Type -> float .                                     (rule 21)

	'='            reduce using rule 21


State 102

	Type -> boolean .                                   (rule 22)

	'='            reduce using rule 22


State 103

	Type -> string .                                    (rule 23)

	'='            reduce using rule 23


State 104

	Decl -> var id '=' InitExp .                        (rule 27)

	id             reduce using rule 27
	num            reduce using rule 27
	real           reduce using rule 27
	'('            reduce using rule 27
	'}'            reduce using rule 27
	';'            reduce using rule 27
	if             reduce using rule 27
	else           reduce using rule 27
	while          reduce using rule 27
	val            reduce using rule 27
	var            reduce using rule 27
	'!'            reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	readln         reduce using rule 27
	print          reduce using rule 27


State 105

	Decl -> val id ':' Type . '=' InitExp               (rule 30)

	'='            shift, and enter state 114


State 106

	Decl -> val id '=' InitExp .                        (rule 28)

	id             reduce using rule 28
	num            reduce using rule 28
	real           reduce using rule 28
	'('            reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28
	if             reduce using rule 28
	else           reduce using rule 28
	while          reduce using rule 28
	val            reduce using rule 28
	var            reduce using rule 28
	'!'            reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	readln         reduce using rule 28
	print          reduce using rule 28


State 107

	While -> while '(' Expr ')' . Command               (rule 18)
	While -> while '(' Expr ')' . '{' Commands '}'      (rule 19)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'{'            shift, and enter state 113
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Command        goto state 112
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 108

	If -> if '(' Expr ')' . Aux_if                      (rule 14)
	If -> if '(' Expr ')' . Aux_if else Aux_if          (rule 15)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'{'            shift, and enter state 111
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Command        goto state 109
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	Aux_if         goto state 110
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 109

	Aux_if -> Command .                                 (rule 16)

	id             reduce using rule 16
	num            reduce using rule 16
	real           reduce using rule 16
	'('            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	val            reduce using rule 16
	var            reduce using rule 16
	'!'            reduce using rule 16
	true           reduce using rule 16
	false          reduce using rule 16
	readln         reduce using rule 16
	print          reduce using rule 16


State 110

	If -> if '(' Expr ')' Aux_if .                      (rule 14)
	If -> if '(' Expr ')' Aux_if . else Aux_if          (rule 15)

	id             reduce using rule 14
	num            reduce using rule 14
	real           reduce using rule 14
	'('            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14
	if             reduce using rule 14
	else           shift, and enter state 120
			(reduce using rule 14)

	while          reduce using rule 14
	val            reduce using rule 14
	var            reduce using rule 14
	'!'            reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	readln         reduce using rule 14
	print          reduce using rule 14


State 111

	Aux_if -> '{' . Commands '}'                        (rule 17)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'}'            reduce using rule 4
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Commands       goto state 119
	Command        goto state 9
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 112

	While -> while '(' Expr ')' Command .               (rule 18)

	id             reduce using rule 18
	num            reduce using rule 18
	real           reduce using rule 18
	'('            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	while          reduce using rule 18
	val            reduce using rule 18
	var            reduce using rule 18
	'!'            reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	readln         reduce using rule 18
	print          reduce using rule 18


State 113

	While -> while '(' Expr ')' '{' . Commands '}'      (rule 19)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'}'            reduce using rule 4
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Commands       goto state 118
	Command        goto state 9
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 114

	Decl -> val id ':' Type '=' . InitExp               (rule 30)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	str            shift, and enter state 97
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30

	Readln         goto state 93
	InitExp        goto state 117
	Expr           goto state 95
	PostIncDecExp  goto state 17
	Atomic         goto state 18
	Sexp           goto state 96

State 115

	Decl -> var id ':' Type '=' . InitExp               (rule 29)

	id             shift, and enter state 35
	num            shift, and enter state 20
	real           shift, and enter state 21
	str            shift, and enter state 97
	'('            shift, and enter state 22
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30

	Readln         goto state 93
	InitExp        goto state 116
	Expr           goto state 95
	PostIncDecExp  goto state 17
	Atomic         goto state 18
	Sexp           goto state 96

State 116

	Decl -> var id ':' Type '=' InitExp .               (rule 29)

	id             reduce using rule 29
	num            reduce using rule 29
	real           reduce using rule 29
	'('            reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29
	if             reduce using rule 29
	else           reduce using rule 29
	while          reduce using rule 29
	val            reduce using rule 29
	var            reduce using rule 29
	'!'            reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	readln         reduce using rule 29
	print          reduce using rule 29


State 117

	Decl -> val id ':' Type '=' InitExp .               (rule 30)

	id             reduce using rule 30
	num            reduce using rule 30
	real           reduce using rule 30
	'('            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	if             reduce using rule 30
	else           reduce using rule 30
	while          reduce using rule 30
	val            reduce using rule 30
	var            reduce using rule 30
	'!'            reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	readln         reduce using rule 30
	print          reduce using rule 30


State 118

	While -> while '(' Expr ')' '{' Commands . '}'      (rule 19)

	'}'            shift, and enter state 123


State 119

	Aux_if -> '{' Commands . '}'                        (rule 17)

	'}'            shift, and enter state 122


State 120

	If -> if '(' Expr ')' Aux_if else . Aux_if          (rule 15)

	id             shift, and enter state 19
	num            shift, and enter state 20
	real           shift, and enter state 21
	'('            shift, and enter state 22
	'{'            shift, and enter state 111
	if             shift, and enter state 23
	while          shift, and enter state 24
	val            shift, and enter state 25
	var            shift, and enter state 26
	'!'            shift, and enter state 27
	true           shift, and enter state 28
	false          shift, and enter state 29
	readln         shift, and enter state 30
	print          shift, and enter state 31

	Command        goto state 109
	Print          goto state 10
	Readln         goto state 11
	If             goto state 12
	Aux_if         goto state 121
	While          goto state 13
	Decl           goto state 14
	Assign         goto state 15
	Expr           goto state 16
	PostIncDecExp  goto state 17
	Atomic         goto state 18

State 121

	If -> if '(' Expr ')' Aux_if else Aux_if .          (rule 15)

	id             reduce using rule 15
	num            reduce using rule 15
	real           reduce using rule 15
	'('            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	val            reduce using rule 15
	var            reduce using rule 15
	'!'            reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	readln         reduce using rule 15
	print          reduce using rule 15


State 122

	Aux_if -> '{' Commands '}' .                        (rule 17)

	id             reduce using rule 17
	num            reduce using rule 17
	real           reduce using rule 17
	'('            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	val            reduce using rule 17
	var            reduce using rule 17
	'!'            reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	readln         reduce using rule 17
	print          reduce using rule 17


State 123

	While -> while '(' Expr ')' '{' Commands '}' .      (rule 19)

	id             reduce using rule 19
	num            reduce using rule 19
	real           reduce using rule 19
	'('            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	if             reduce using rule 19
	else           reduce using rule 19
	while          reduce using rule 19
	val            reduce using rule 19
	var            reduce using rule 19
	'!'            reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	readln         reduce using rule 19
	print          reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 62
Number of terminals: 47
Number of non-terminals: 17
Number of states: 124
