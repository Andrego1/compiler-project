-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------

state 97 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Fun                                (0)
	Fun -> fun main '(' ')' '{' Commands '}'           (1)
	Commands -> Command ';' Commands                   (2)
	Commands -> Command Commands                       (3)
	Commands ->                                        (4)
	Command -> Decl                                    (5)
	Command -> Assign                                  (6)
	Command -> If                                      (7)
	Command -> While                                   (8)
	Command -> Print                                   (9)
	Print -> print '(' InitExp ')'                     (10)
	Readln -> readln '(' ')'                           (11)
	If -> if '(' Expr ')' Aux_if                       (12)
	If -> if '(' Expr ')' Aux_if else Aux_if           (13)
	Aux_if -> Command                                  (14)
	Aux_if -> '{' Commands '}'                         (15)
	While -> while '(' Expr ')' Command                (16)
	While -> while '(' Expr ')' '{' Commands '}'       (17)
	Type -> int                                        (18)
	Type -> float                                      (19)
	Type -> boolean                                    (20)
	Type -> string                                     (21)
	InitExp -> Expr                                    (22)
	InitExp -> Sexp                                    (23)
	Decl -> var id '=' InitExp                         (24)
	Decl -> val id '=' InitExp                         (25)
	Decl -> var id ':' Type '=' InitExp                (26)
	Decl -> val id ':' Type '=' InitExp                (27)
	Assign -> id '=' Expr                              (28)
	Assign -> id "+=" Expr                             (29)
	Assign -> id "-=" Expr                             (30)
	Assign -> id "*=" Expr                             (31)
	Assign -> id "/=" Expr                             (32)
	Assign -> id "%=" Expr                             (33)
	Assign -> PostIncDecExp                            (34)
	Expr -> Expr '+' Expr                              (35)
	Expr -> Expr '-' Expr                              (36)
	Expr -> Expr '*' Expr                              (37)
	Expr -> Expr '/' Expr                              (38)
	Expr -> Expr '%' Expr                              (39)
	Expr -> Expr "&&" Expr                             (40)
	Expr -> Expr "||" Expr                             (41)
	Expr -> Expr '>' Expr                              (42)
	Expr -> Expr ">=" Expr                             (43)
	Expr -> Expr '<' Expr                              (44)
	Expr -> Expr "<=" Expr                             (45)
	Expr -> Expr "==" Expr                             (46)
	Expr -> Expr "!=" Expr                             (47)
	Expr -> '!' Expr                                   (48)
	Expr -> '-' Expr                                   (49)
	Expr -> Atomic                                     (50)
	Expr -> Readln                                     (51)
	PostIncDecExp -> id "++"                           (52)
	PostIncDecExp -> id "--"                           (53)
	Atomic -> id                                       (54)
	Atomic -> num                                      (55)
	Atomic -> real                                     (56)
	Atomic -> true                                     (57)
	Atomic -> false                                    (58)
	Atomic -> '(' Expr ')'                             (59)
	Sexp -> str                                        (60)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { ID $$ }
	num            { NUM $$ }
	real           { REAL $$ }
	str            { STR $$ }
	'('            { LPAREN }
	')'            { RPAREN }
	'{'            { LBRACE }
	'}'            { RBRACE }
	';'            { SEMICOLON }
	if             { IF }
	else           { ELSE }
	while          { WHILE }
	int            { INT }
	float          { FLOAT }
	boolean        { BOOLEAN }
	string         { STRING }
	fun            { FUN }
	main           { MAIN }
	val            { VAL }
	var            { VAR }
	'+'            { PLUS }
	'-'            { MINUS }
	'*'            { MULT }
	'/'            { DIV }
	'%'            { MOD }
	'>'            { G }
	">="           { GEQ }
	'<'            { L }
	"<="           { LEQ }
	"=="           { EQUAL }
	"!="           { NEQUAL }
	"&&"           { AND }
	"||"           { OR }
	'!'            { NOT }
	"++"           { ICR }
	"--"           { DCR }
	'='            { ATRIB }
	"+="           { ATRIB_PLUS }
	"-="           { ATRIB_MINUS }
	"*="           { ATRIB_MULT }
	"/="           { ATRIB_DIV }
	"%="           { ATRIB_MOD }
	true           { TRUE }
	false          { FALSE }
	readln         { READLN }
	print          { PRINT }
	':'            { COLON }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Fun             rule  1
	Commands        rules 2, 3, 4
	Command         rules 5, 6, 7, 8, 9
	Print           rule  10
	Readln          rule  11
	If              rules 12, 13
	Aux_if          rules 14, 15
	While           rules 16, 17
	Type            rules 18, 19, 20, 21
	InitExp         rules 22, 23
	Decl            rules 24, 25, 26, 27
	Assign          rules 28, 29, 30, 31, 32, 33, 34
	Expr            rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
	PostIncDecExp   rules 52, 53
	Atomic          rules 54, 55, 56, 57, 58, 59
	Sexp            rule  60

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	fun            shift, and enter state 2

	Fun            goto state 3

State 1


	fun            shift, and enter state 2


State 2

	Fun -> fun . main '(' ')' '{' Commands '}'          (rule 1)

	main           shift, and enter state 4


State 3

	%start_parse -> Fun .                               (rule 0)

	%eof           accept


State 4

	Fun -> fun main . '(' ')' '{' Commands '}'          (rule 1)

	'('            shift, and enter state 5


State 5

	Fun -> fun main '(' . ')' '{' Commands '}'          (rule 1)

	')'            shift, and enter state 6


State 6

	Fun -> fun main '(' ')' . '{' Commands '}'          (rule 1)

	'{'            shift, and enter state 7


State 7

	Fun -> fun main '(' ')' '{' . Commands '}'          (rule 1)

	id             shift, and enter state 16
	'}'            reduce using rule 4
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Commands       goto state 8
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 8

	Fun -> fun main '(' ')' '{' Commands . '}'          (rule 1)

	'}'            shift, and enter state 37


State 9

	Commands -> Command . ';' Commands                  (rule 2)
	Commands -> Command . Commands                      (rule 3)

	id             shift, and enter state 16
	'}'            reduce using rule 4
	';'            shift, and enter state 36
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Commands       goto state 35
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 10

	Command -> Print .                                  (rule 9)

	id             reduce using rule 9
	'}'            reduce using rule 9
	';'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	val            reduce using rule 9
	var            reduce using rule 9
	print          reduce using rule 9


State 11

	Command -> If .                                     (rule 7)

	id             reduce using rule 7
	'}'            reduce using rule 7
	';'            reduce using rule 7
	if             reduce using rule 7
	else           reduce using rule 7
	while          reduce using rule 7
	val            reduce using rule 7
	var            reduce using rule 7
	print          reduce using rule 7


State 12

	Command -> While .                                  (rule 8)

	id             reduce using rule 8
	'}'            reduce using rule 8
	';'            reduce using rule 8
	if             reduce using rule 8
	else           reduce using rule 8
	while          reduce using rule 8
	val            reduce using rule 8
	var            reduce using rule 8
	print          reduce using rule 8


State 13

	Command -> Decl .                                   (rule 5)

	id             reduce using rule 5
	'}'            reduce using rule 5
	';'            reduce using rule 5
	if             reduce using rule 5
	else           reduce using rule 5
	while          reduce using rule 5
	val            reduce using rule 5
	var            reduce using rule 5
	print          reduce using rule 5


State 14

	Command -> Assign .                                 (rule 6)

	id             reduce using rule 6
	'}'            reduce using rule 6
	';'            reduce using rule 6
	if             reduce using rule 6
	else           reduce using rule 6
	while          reduce using rule 6
	val            reduce using rule 6
	var            reduce using rule 6
	print          reduce using rule 6


State 15

	Assign -> PostIncDecExp .                           (rule 34)

	id             reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	while          reduce using rule 34
	val            reduce using rule 34
	var            reduce using rule 34
	print          reduce using rule 34


State 16

	Assign -> id . '=' Expr                             (rule 28)
	Assign -> id . "+=" Expr                            (rule 29)
	Assign -> id . "-=" Expr                            (rule 30)
	Assign -> id . "*=" Expr                            (rule 31)
	Assign -> id . "/=" Expr                            (rule 32)
	Assign -> id . "%=" Expr                            (rule 33)
	PostIncDecExp -> id . "++"                          (rule 52)
	PostIncDecExp -> id . "--"                          (rule 53)

	"++"           shift, and enter state 27
	"--"           shift, and enter state 28
	'='            shift, and enter state 29
	"+="           shift, and enter state 30
	"-="           shift, and enter state 31
	"*="           shift, and enter state 32
	"/="           shift, and enter state 33
	"%="           shift, and enter state 34


State 17

	If -> if . '(' Expr ')' Aux_if                      (rule 12)
	If -> if . '(' Expr ')' Aux_if else Aux_if          (rule 13)

	'('            shift, and enter state 26


State 18

	While -> while . '(' Expr ')' Command               (rule 16)
	While -> while . '(' Expr ')' '{' Commands '}'      (rule 17)

	'('            shift, and enter state 25


State 19

	Decl -> val . id '=' InitExp                        (rule 25)
	Decl -> val . id ':' Type '=' InitExp               (rule 27)

	id             shift, and enter state 24


State 20

	Decl -> var . id '=' InitExp                        (rule 24)
	Decl -> var . id ':' Type '=' InitExp               (rule 26)

	id             shift, and enter state 23


State 21

	Print -> print . '(' InitExp ')'                    (rule 10)

	'('            shift, and enter state 22


State 22

	Print -> print '(' . InitExp ')'                    (rule 10)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	str            shift, and enter state 65
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	InitExp        goto state 62
	Expr           goto state 63
	Atomic         goto state 41
	Sexp           goto state 64

State 23

	Decl -> var id . '=' InitExp                        (rule 24)
	Decl -> var id . ':' Type '=' InitExp               (rule 26)

	'='            shift, and enter state 60
	':'            shift, and enter state 61


State 24

	Decl -> val id . '=' InitExp                        (rule 25)
	Decl -> val id . ':' Type '=' InitExp               (rule 27)

	'='            shift, and enter state 58
	':'            shift, and enter state 59


State 25

	While -> while '(' . Expr ')' Command               (rule 16)
	While -> while '(' . Expr ')' '{' Commands '}'      (rule 17)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 57
	Atomic         goto state 41

State 26

	If -> if '(' . Expr ')' Aux_if                      (rule 12)
	If -> if '(' . Expr ')' Aux_if else Aux_if          (rule 13)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 56
	Atomic         goto state 41

State 27

	PostIncDecExp -> id "++" .                          (rule 52)

	id             reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52
	if             reduce using rule 52
	else           reduce using rule 52
	while          reduce using rule 52
	val            reduce using rule 52
	var            reduce using rule 52
	print          reduce using rule 52


State 28

	PostIncDecExp -> id "--" .                          (rule 53)

	id             reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53
	if             reduce using rule 53
	else           reduce using rule 53
	while          reduce using rule 53
	val            reduce using rule 53
	var            reduce using rule 53
	print          reduce using rule 53


State 29

	Assign -> id '=' . Expr                             (rule 28)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 55
	Atomic         goto state 41

State 30

	Assign -> id "+=" . Expr                            (rule 29)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 54
	Atomic         goto state 41

State 31

	Assign -> id "-=" . Expr                            (rule 30)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 53
	Atomic         goto state 41

State 32

	Assign -> id "*=" . Expr                            (rule 31)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 52
	Atomic         goto state 41

State 33

	Assign -> id "/=" . Expr                            (rule 32)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 51
	Atomic         goto state 41

State 34

	Assign -> id "%=" . Expr                            (rule 33)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 40
	Atomic         goto state 41

State 35

	Commands -> Command Commands .                      (rule 3)

	'}'            reduce using rule 3


State 36

	Commands -> Command ';' . Commands                  (rule 2)

	id             shift, and enter state 16
	'}'            reduce using rule 4
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Commands       goto state 38
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 37

	Fun -> fun main '(' ')' '{' Commands '}' .          (rule 1)

	%eof           reduce using rule 1


State 38

	Commands -> Command ';' Commands .                  (rule 2)

	'}'            reduce using rule 2


State 39

	Expr -> Readln .                                    (rule 51)

	id             reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51
	if             reduce using rule 51
	else           reduce using rule 51
	while          reduce using rule 51
	val            reduce using rule 51
	var            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'>'            reduce using rule 51
	">="           reduce using rule 51
	'<'            reduce using rule 51
	"<="           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"&&"           reduce using rule 51
	"||"           reduce using rule 51
	print          reduce using rule 51


State 40

	Assign -> id "%=" Expr .                            (rule 33)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	if             reduce using rule 33
	else           reduce using rule 33
	while          reduce using rule 33
	val            reduce using rule 33
	var            reduce using rule 33
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 33


State 41

	Expr -> Atomic .                                    (rule 50)

	id             reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50
	if             reduce using rule 50
	else           reduce using rule 50
	while          reduce using rule 50
	val            reduce using rule 50
	var            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'%'            reduce using rule 50
	'>'            reduce using rule 50
	">="           reduce using rule 50
	'<'            reduce using rule 50
	"<="           reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	"&&"           reduce using rule 50
	"||"           reduce using rule 50
	print          reduce using rule 50


State 42

	Atomic -> id .                                      (rule 54)

	id             reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	';'            reduce using rule 54
	if             reduce using rule 54
	else           reduce using rule 54
	while          reduce using rule 54
	val            reduce using rule 54
	var            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'>'            reduce using rule 54
	">="           reduce using rule 54
	'<'            reduce using rule 54
	"<="           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"&&"           reduce using rule 54
	"||"           reduce using rule 54
	print          reduce using rule 54


State 43

	Atomic -> num .                                     (rule 55)

	id             reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55
	if             reduce using rule 55
	else           reduce using rule 55
	while          reduce using rule 55
	val            reduce using rule 55
	var            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'>'            reduce using rule 55
	">="           reduce using rule 55
	'<'            reduce using rule 55
	"<="           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	print          reduce using rule 55


State 44

	Atomic -> real .                                    (rule 56)

	id             reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56
	if             reduce using rule 56
	else           reduce using rule 56
	while          reduce using rule 56
	val            reduce using rule 56
	var            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'>'            reduce using rule 56
	">="           reduce using rule 56
	'<'            reduce using rule 56
	"<="           reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"&&"           reduce using rule 56
	"||"           reduce using rule 56
	print          reduce using rule 56


State 45

	Atomic -> '(' . Expr ')'                            (rule 59)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 93
	Atomic         goto state 41

State 46

	Expr -> '-' . Expr                                  (rule 49)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 92
	Atomic         goto state 41

State 47

	Expr -> '!' . Expr                                  (rule 48)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 91
	Atomic         goto state 41

State 48

	Atomic -> true .                                    (rule 57)

	id             reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57
	if             reduce using rule 57
	else           reduce using rule 57
	while          reduce using rule 57
	val            reduce using rule 57
	var            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'>'            reduce using rule 57
	">="           reduce using rule 57
	'<'            reduce using rule 57
	"<="           reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"&&"           reduce using rule 57
	"||"           reduce using rule 57
	print          reduce using rule 57


State 49

	Atomic -> false .                                   (rule 58)

	id             reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58
	if             reduce using rule 58
	else           reduce using rule 58
	while          reduce using rule 58
	val            reduce using rule 58
	var            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'>'            reduce using rule 58
	">="           reduce using rule 58
	'<'            reduce using rule 58
	"<="           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"&&"           reduce using rule 58
	"||"           reduce using rule 58
	print          reduce using rule 58


State 50

	Readln -> readln . '(' ')'                          (rule 11)

	'('            shift, and enter state 90


State 51

	Assign -> id "/=" Expr .                            (rule 32)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	if             reduce using rule 32
	else           reduce using rule 32
	while          reduce using rule 32
	val            reduce using rule 32
	var            reduce using rule 32
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 32


State 52

	Assign -> id "*=" Expr .                            (rule 31)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	if             reduce using rule 31
	else           reduce using rule 31
	while          reduce using rule 31
	val            reduce using rule 31
	var            reduce using rule 31
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 31


State 53

	Assign -> id "-=" Expr .                            (rule 30)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	if             reduce using rule 30
	else           reduce using rule 30
	while          reduce using rule 30
	val            reduce using rule 30
	var            reduce using rule 30
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 30


State 54

	Assign -> id "+=" Expr .                            (rule 29)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29
	if             reduce using rule 29
	else           reduce using rule 29
	while          reduce using rule 29
	val            reduce using rule 29
	var            reduce using rule 29
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 29


State 55

	Assign -> id '=' Expr .                             (rule 28)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28
	if             reduce using rule 28
	else           reduce using rule 28
	while          reduce using rule 28
	val            reduce using rule 28
	var            reduce using rule 28
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 28


State 56

	If -> if '(' Expr . ')' Aux_if                      (rule 12)
	If -> if '(' Expr . ')' Aux_if else Aux_if          (rule 13)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	')'            shift, and enter state 89
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78


State 57

	While -> while '(' Expr . ')' Command               (rule 16)
	While -> while '(' Expr . ')' '{' Commands '}'      (rule 17)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	')'            shift, and enter state 88
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78


State 58

	Decl -> val id '=' . InitExp                        (rule 25)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	str            shift, and enter state 65
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	InitExp        goto state 87
	Expr           goto state 63
	Atomic         goto state 41
	Sexp           goto state 64

State 59

	Decl -> val id ':' . Type '=' InitExp               (rule 27)

	int            shift, and enter state 81
	float          shift, and enter state 82
	boolean        shift, and enter state 83
	string         shift, and enter state 84

	Type           goto state 86

State 60

	Decl -> var id '=' . InitExp                        (rule 24)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	str            shift, and enter state 65
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	InitExp        goto state 85
	Expr           goto state 63
	Atomic         goto state 41
	Sexp           goto state 64

State 61

	Decl -> var id ':' . Type '=' InitExp               (rule 26)

	int            shift, and enter state 81
	float          shift, and enter state 82
	boolean        shift, and enter state 83
	string         shift, and enter state 84

	Type           goto state 80

State 62

	Print -> print '(' InitExp . ')'                    (rule 10)

	')'            shift, and enter state 79


State 63

	InitExp -> Expr .                                   (rule 22)
	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 22
	')'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	if             reduce using rule 22
	else           reduce using rule 22
	while          reduce using rule 22
	val            reduce using rule 22
	var            reduce using rule 22
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78
	print          reduce using rule 22


State 64

	InitExp -> Sexp .                                   (rule 23)

	id             reduce using rule 23
	')'            reduce using rule 23
	'}'            reduce using rule 23
	';'            reduce using rule 23
	if             reduce using rule 23
	else           reduce using rule 23
	while          reduce using rule 23
	val            reduce using rule 23
	var            reduce using rule 23
	print          reduce using rule 23


State 65

	Sexp -> str .                                       (rule 60)

	id             reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60
	if             reduce using rule 60
	else           reduce using rule 60
	while          reduce using rule 60
	val            reduce using rule 60
	var            reduce using rule 60
	print          reduce using rule 60


State 66

	Expr -> Expr '+' . Expr                             (rule 35)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 115
	Atomic         goto state 41

State 67

	Expr -> Expr '-' . Expr                             (rule 36)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 114
	Atomic         goto state 41

State 68

	Expr -> Expr '*' . Expr                             (rule 37)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 113
	Atomic         goto state 41

State 69

	Expr -> Expr '/' . Expr                             (rule 38)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 112
	Atomic         goto state 41

State 70

	Expr -> Expr '%' . Expr                             (rule 39)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 111
	Atomic         goto state 41

State 71

	Expr -> Expr '>' . Expr                             (rule 42)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 110
	Atomic         goto state 41

State 72

	Expr -> Expr ">=" . Expr                            (rule 43)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 109
	Atomic         goto state 41

State 73

	Expr -> Expr '<' . Expr                             (rule 44)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 108
	Atomic         goto state 41

State 74

	Expr -> Expr "<=" . Expr                            (rule 45)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 107
	Atomic         goto state 41

State 75

	Expr -> Expr "==" . Expr                            (rule 46)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 106
	Atomic         goto state 41

State 76

	Expr -> Expr "!=" . Expr                            (rule 47)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 105
	Atomic         goto state 41

State 77

	Expr -> Expr "&&" . Expr                            (rule 40)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 104
	Atomic         goto state 41

State 78

	Expr -> Expr "||" . Expr                            (rule 41)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	Expr           goto state 103
	Atomic         goto state 41

State 79

	Print -> print '(' InitExp ')' .                    (rule 10)

	id             reduce using rule 10
	'}'            reduce using rule 10
	';'            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	val            reduce using rule 10
	var            reduce using rule 10
	print          reduce using rule 10


State 80

	Decl -> var id ':' Type . '=' InitExp               (rule 26)

	'='            shift, and enter state 102


State 81

	Type -> int .                                       (rule 18)

	'='            reduce using rule 18


State 82

	Type -> float .                                     (rule 19)

	'='            reduce using rule 19


State 83

	Type -> boolean .                                   (rule 20)

	'='            reduce using rule 20


State 84

	Type -> string .                                    (rule 21)

	'='            reduce using rule 21


State 85

	Decl -> var id '=' InitExp .                        (rule 24)

	id             reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24
	if             reduce using rule 24
	else           reduce using rule 24
	while          reduce using rule 24
	val            reduce using rule 24
	var            reduce using rule 24
	print          reduce using rule 24


State 86

	Decl -> val id ':' Type . '=' InitExp               (rule 27)

	'='            shift, and enter state 101


State 87

	Decl -> val id '=' InitExp .                        (rule 25)

	id             reduce using rule 25
	'}'            reduce using rule 25
	';'            reduce using rule 25
	if             reduce using rule 25
	else           reduce using rule 25
	while          reduce using rule 25
	val            reduce using rule 25
	var            reduce using rule 25
	print          reduce using rule 25


State 88

	While -> while '(' Expr ')' . Command               (rule 16)
	While -> while '(' Expr ')' . '{' Commands '}'      (rule 17)

	id             shift, and enter state 16
	'{'            shift, and enter state 100
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Command        goto state 99
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 89

	If -> if '(' Expr ')' . Aux_if                      (rule 12)
	If -> if '(' Expr ')' . Aux_if else Aux_if          (rule 13)

	id             shift, and enter state 16
	'{'            shift, and enter state 98
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Command        goto state 96
	Print          goto state 10
	If             goto state 11
	Aux_if         goto state 97
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 90

	Readln -> readln '(' . ')'                          (rule 11)

	')'            shift, and enter state 95


State 91

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)
	Expr -> '!' Expr .                                  (rule 48)

	id             reduce using rule 48
	')'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	if             reduce using rule 48
	else           reduce using rule 48
	while          reduce using rule 48
	val            reduce using rule 48
	var            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'%'            reduce using rule 48
	'>'            reduce using rule 48
	">="           reduce using rule 48
	'<'            reduce using rule 48
	"<="           reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48
	print          reduce using rule 48


State 92

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)
	Expr -> '-' Expr .                                  (rule 49)

	id             reduce using rule 49
	')'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	if             reduce using rule 49
	else           reduce using rule 49
	while          reduce using rule 49
	val            reduce using rule 49
	var            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'%'            reduce using rule 49
	'>'            reduce using rule 49
	">="           reduce using rule 49
	'<'            reduce using rule 49
	"<="           reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	"&&"           reduce using rule 49
	"||"           reduce using rule 49
	print          reduce using rule 49


State 93

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)
	Atomic -> '(' Expr . ')'                            (rule 59)

	')'            shift, and enter state 94
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           shift, and enter state 78


State 94

	Atomic -> '(' Expr ')' .                            (rule 59)

	id             reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59
	if             reduce using rule 59
	else           reduce using rule 59
	while          reduce using rule 59
	val            reduce using rule 59
	var            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'>'            reduce using rule 59
	">="           reduce using rule 59
	'<'            reduce using rule 59
	"<="           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"&&"           reduce using rule 59
	"||"           reduce using rule 59
	print          reduce using rule 59


State 95

	Readln -> readln '(' ')' .                          (rule 11)

	id             reduce using rule 11
	')'            reduce using rule 11
	'}'            reduce using rule 11
	';'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	val            reduce using rule 11
	var            reduce using rule 11
	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'*'            reduce using rule 11
	'/'            reduce using rule 11
	'%'            reduce using rule 11
	'>'            reduce using rule 11
	">="           reduce using rule 11
	'<'            reduce using rule 11
	"<="           reduce using rule 11
	"=="           reduce using rule 11
	"!="           reduce using rule 11
	"&&"           reduce using rule 11
	"||"           reduce using rule 11
	print          reduce using rule 11


State 96

	Aux_if -> Command .                                 (rule 14)

	id             reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	val            reduce using rule 14
	var            reduce using rule 14
	print          reduce using rule 14


State 97

	If -> if '(' Expr ')' Aux_if .                      (rule 12)
	If -> if '(' Expr ')' Aux_if . else Aux_if          (rule 13)

	id             reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12
	if             reduce using rule 12
	else           shift, and enter state 120
			(reduce using rule 12)

	while          reduce using rule 12
	val            reduce using rule 12
	var            reduce using rule 12
	print          reduce using rule 12


State 98

	Aux_if -> '{' . Commands '}'                        (rule 15)

	id             shift, and enter state 16
	'}'            reduce using rule 4
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Commands       goto state 119
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 99

	While -> while '(' Expr ')' Command .               (rule 16)

	id             reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	val            reduce using rule 16
	var            reduce using rule 16
	print          reduce using rule 16


State 100

	While -> while '(' Expr ')' '{' . Commands '}'      (rule 17)

	id             shift, and enter state 16
	'}'            reduce using rule 4
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Commands       goto state 118
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 101

	Decl -> val id ':' Type '=' . InitExp               (rule 27)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	str            shift, and enter state 65
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	InitExp        goto state 117
	Expr           goto state 63
	Atomic         goto state 41
	Sexp           goto state 64

State 102

	Decl -> var id ':' Type '=' . InitExp               (rule 26)

	id             shift, and enter state 42
	num            shift, and enter state 43
	real           shift, and enter state 44
	str            shift, and enter state 65
	'('            shift, and enter state 45
	'-'            shift, and enter state 46
	'!'            shift, and enter state 47
	true           shift, and enter state 48
	false          shift, and enter state 49
	readln         shift, and enter state 50

	Readln         goto state 39
	InitExp        goto state 116
	Expr           goto state 63
	Atomic         goto state 41
	Sexp           goto state 64

State 103

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr "||" Expr .                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	if             reduce using rule 41
	else           reduce using rule 41
	while          reduce using rule 41
	val            reduce using rule 41
	var            reduce using rule 41
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           shift, and enter state 77
	"||"           reduce using rule 41
	print          reduce using rule 41


State 104

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr "&&" Expr .                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	if             reduce using rule 40
	else           reduce using rule 40
	while          reduce using rule 40
	val            reduce using rule 40
	var            reduce using rule 40
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           shift, and enter state 75
	"!="           shift, and enter state 76
	"&&"           reduce using rule 40
	"||"           reduce using rule 40
	print          reduce using rule 40


State 105

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)
	Expr -> Expr "!=" Expr .                            (rule 47)

	id             reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	if             reduce using rule 47
	else           reduce using rule 47
	while          reduce using rule 47
	val            reduce using rule 47
	var            reduce using rule 47
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 47
	"||"           reduce using rule 47
	print          reduce using rule 47


State 106

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr "==" Expr .                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	if             reduce using rule 46
	else           reduce using rule 46
	while          reduce using rule 46
	val            reduce using rule 46
	var            reduce using rule 46
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            shift, and enter state 71
	">="           shift, and enter state 72
	'<'            shift, and enter state 73
	"<="           shift, and enter state 74
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 46
	"||"           reduce using rule 46
	print          reduce using rule 46


State 107

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr "<=" Expr .                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	if             reduce using rule 45
	else           reduce using rule 45
	while          reduce using rule 45
	val            reduce using rule 45
	var            reduce using rule 45
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	"&&"           reduce using rule 45
	"||"           reduce using rule 45
	print          reduce using rule 45


State 108

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr '<' Expr .                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	if             reduce using rule 44
	else           reduce using rule 44
	while          reduce using rule 44
	val            reduce using rule 44
	var            reduce using rule 44
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	"&&"           reduce using rule 44
	"||"           reduce using rule 44
	print          reduce using rule 44


State 109

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr ">=" Expr .                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	if             reduce using rule 43
	else           reduce using rule 43
	while          reduce using rule 43
	val            reduce using rule 43
	var            reduce using rule 43
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43
	print          reduce using rule 43


State 110

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr '>' Expr .                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	if             reduce using rule 42
	else           reduce using rule 42
	while          reduce using rule 42
	val            reduce using rule 42
	var            reduce using rule 42
	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42
	print          reduce using rule 42


State 111

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr '%' Expr .                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	if             reduce using rule 39
	else           reduce using rule 39
	while          reduce using rule 39
	val            reduce using rule 39
	var            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'%'            reduce using rule 39
	'>'            reduce using rule 39
	">="           reduce using rule 39
	'<'            reduce using rule 39
	"<="           reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	"&&"           reduce using rule 39
	"||"           reduce using rule 39
	print          reduce using rule 39


State 112

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr '/' Expr .                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	if             reduce using rule 38
	else           reduce using rule 38
	while          reduce using rule 38
	val            reduce using rule 38
	var            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'%'            reduce using rule 38
	'>'            reduce using rule 38
	">="           reduce using rule 38
	'<'            reduce using rule 38
	"<="           reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	"&&"           reduce using rule 38
	"||"           reduce using rule 38
	print          reduce using rule 38


State 113

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr '*' Expr .                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	while          reduce using rule 37
	val            reduce using rule 37
	var            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	'>'            reduce using rule 37
	">="           reduce using rule 37
	'<'            reduce using rule 37
	"<="           reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	"&&"           reduce using rule 37
	"||"           reduce using rule 37
	print          reduce using rule 37


State 114

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr '-' Expr .                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 36
	')'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	while          reduce using rule 36
	val            reduce using rule 36
	var            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            reduce using rule 36
	">="           reduce using rule 36
	'<'            reduce using rule 36
	"<="           reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	"&&"           reduce using rule 36
	"||"           reduce using rule 36
	print          reduce using rule 36


State 115

	Expr -> Expr . '+' Expr                             (rule 35)
	Expr -> Expr '+' Expr .                             (rule 35)
	Expr -> Expr . '-' Expr                             (rule 36)
	Expr -> Expr . '*' Expr                             (rule 37)
	Expr -> Expr . '/' Expr                             (rule 38)
	Expr -> Expr . '%' Expr                             (rule 39)
	Expr -> Expr . "&&" Expr                            (rule 40)
	Expr -> Expr . "||" Expr                            (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . ">=" Expr                            (rule 43)
	Expr -> Expr . '<' Expr                             (rule 44)
	Expr -> Expr . "<=" Expr                            (rule 45)
	Expr -> Expr . "==" Expr                            (rule 46)
	Expr -> Expr . "!=" Expr                            (rule 47)

	id             reduce using rule 35
	')'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	while          reduce using rule 35
	val            reduce using rule 35
	var            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'%'            shift, and enter state 70
	'>'            reduce using rule 35
	">="           reduce using rule 35
	'<'            reduce using rule 35
	"<="           reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	"&&"           reduce using rule 35
	"||"           reduce using rule 35
	print          reduce using rule 35


State 116

	Decl -> var id ':' Type '=' InitExp .               (rule 26)

	id             reduce using rule 26
	'}'            reduce using rule 26
	';'            reduce using rule 26
	if             reduce using rule 26
	else           reduce using rule 26
	while          reduce using rule 26
	val            reduce using rule 26
	var            reduce using rule 26
	print          reduce using rule 26


State 117

	Decl -> val id ':' Type '=' InitExp .               (rule 27)

	id             reduce using rule 27
	'}'            reduce using rule 27
	';'            reduce using rule 27
	if             reduce using rule 27
	else           reduce using rule 27
	while          reduce using rule 27
	val            reduce using rule 27
	var            reduce using rule 27
	print          reduce using rule 27


State 118

	While -> while '(' Expr ')' '{' Commands . '}'      (rule 17)

	'}'            shift, and enter state 123


State 119

	Aux_if -> '{' Commands . '}'                        (rule 15)

	'}'            shift, and enter state 122


State 120

	If -> if '(' Expr ')' Aux_if else . Aux_if          (rule 13)

	id             shift, and enter state 16
	'{'            shift, and enter state 98
	if             shift, and enter state 17
	while          shift, and enter state 18
	val            shift, and enter state 19
	var            shift, and enter state 20
	print          shift, and enter state 21

	Command        goto state 96
	Print          goto state 10
	If             goto state 11
	Aux_if         goto state 121
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	PostIncDecExp  goto state 15

State 121

	If -> if '(' Expr ')' Aux_if else Aux_if .          (rule 13)

	id             reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	val            reduce using rule 13
	var            reduce using rule 13
	print          reduce using rule 13


State 122

	Aux_if -> '{' Commands '}' .                        (rule 15)

	id             reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	val            reduce using rule 15
	var            reduce using rule 15
	print          reduce using rule 15


State 123

	While -> while '(' Expr ')' '{' Commands '}' .      (rule 17)

	id             reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	val            reduce using rule 17
	var            reduce using rule 17
	print          reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 61
Number of terminals: 47
Number of non-terminals: 17
Number of states: 124
