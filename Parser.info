-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Fun                                (0)
	Fun -> fun main '(' ')' '{' Commands '}'           (1)
	Fun ->                                             (2)
	Commands -> Command Commands                       (3)
	Commands ->                                        (4)
	Command -> Decl                                    (5)
	Command -> Assign                                  (6)
	Command -> Expr                                    (7)
	Command -> If                                      (8)
	Command -> While                                   (9)
	Command -> Print                                   (10)
	Readln -> readln '(' ')'                           (11)
	Print -> print '(' InitExp ')'                     (12)
	If -> if '(' Expr ')' '{' Commands '}'             (13)
	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands '}'   (14)
	While -> while '(' Expr ')' '{' Commands '}'       (15)
	Type -> int                                        (16)
	Type -> float                                      (17)
	Type -> boolean                                    (18)
	Type -> string                                     (19)
	InitExp -> Expr                                    (20)
	InitExp -> Sexp                                    (21)
	InitExp -> Readln                                  (22)
	Decl -> var id '=' InitExp                         (23)
	Decl -> val id '=' InitExp                         (24)
	Decl -> var id ':' Type '=' InitExp                (25)
	Decl -> val id ':' Type '=' InitExp                (26)
	Assign -> id '=' Expr                              (27)
	Assign -> id "+=" Expr                             (28)
	Assign -> id "-=" Expr                             (29)
	Assign -> id "*=" Expr                             (30)
	Assign -> id "/=" Expr                             (31)
	Assign -> id "%=" Expr                             (32)
	Expr -> Expr '+' Expr                              (33)
	Expr -> Expr '-' Expr                              (34)
	Expr -> Expr '*' Expr                              (35)
	Expr -> Expr '/' Expr                              (36)
	Expr -> Expr '%' Expr                              (37)
	Expr -> PostIncDecExp                              (38)
	Expr -> Expr "&&" Expr                             (39)
	Expr -> Expr "||" Expr                             (40)
	Expr -> Expr '>' Expr                              (41)
	Expr -> Expr ">=" Expr                             (42)
	Expr -> Expr '<' Expr                              (43)
	Expr -> Expr "<=" Expr                             (44)
	Expr -> Expr "==" Expr                             (45)
	Expr -> Expr "!=" Expr                             (46)
	Expr -> '!' Expr                                   (47)
	Expr -> '(' Expr ')'                               (48)
	Expr -> Atomic                                     (49)
	PostIncDecExp -> id "++"                           (50)
	PostIncDecExp -> id "--"                           (51)
	Atomic -> id                                       (52)
	Atomic -> num                                      (53)
	Atomic -> true                                     (54)
	Atomic -> false                                    (55)
	Sexp -> str                                        (56)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { ID $$ }
	num            { NUM $$ }
	str            { STR $$ }
	'('            { LPAREN }
	')'            { RPAREN }
	'{'            { LBRACE }
	'}'            { RBRACE }
	if             { IF }
	else           { ELSE }
	while          { WHILE }
	int            { INT }
	float          { FLOAT }
	boolean        { BOOLEAN }
	string         { STRING }
	fun            { FUN }
	main           { MAIN }
	val            { VAL }
	var            { VAR }
	'+'            { PLUS }
	'-'            { MINUS }
	'*'            { MULT }
	'/'            { DIV }
	'%'            { MOD }
	'>'            { G }
	">="           { GEQ }
	'<'            { L }
	"<="           { LEQ }
	"=="           { EQUAL }
	"!="           { NEQUAL }
	"&&"           { AND }
	"||"           { OR }
	'!'            { NOT }
	"++"           { ICR }
	"--"           { DCR }
	'='            { ATRIB }
	"+="           { ATRIB_PLUS }
	"-="           { ATRIB_MINUS }
	"*="           { ATRIB_MULT }
	"/="           { ATRIB_DIV }
	"%="           { ATRIB_MOD }
	true           { TRUE }
	false          { FALSE }
	readln         { READLN }
	print          { PRINT }
	':'            { COLON }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Fun             rules 1, 2
	Commands        rules 3, 4
	Command         rules 5, 6, 7, 8, 9, 10
	Readln          rule  11
	Print           rule  12
	If              rules 13, 14
	While           rule  15
	Type            rules 16, 17, 18, 19
	InitExp         rules 20, 21, 22
	Decl            rules 23, 24, 25, 26
	Assign          rules 27, 28, 29, 30, 31, 32
	Expr            rules 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
	PostIncDecExp   rules 50, 51
	Atomic          rules 52, 53, 54, 55
	Sexp            rule  56

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	fun            shift, and enter state 2
	%eof           reduce using rule 2

	Fun            goto state 3

State 1


	fun            shift, and enter state 2


State 2

	Fun -> fun . main '(' ')' '{' Commands '}'          (rule 1)

	main           shift, and enter state 4


State 3

	%start_parse -> Fun .                               (rule 0)

	%eof           accept


State 4

	Fun -> fun main . '(' ')' '{' Commands '}'          (rule 1)

	'('            shift, and enter state 5


State 5

	Fun -> fun main '(' . ')' '{' Commands '}'          (rule 1)

	')'            shift, and enter state 6


State 6

	Fun -> fun main '(' ')' . '{' Commands '}'          (rule 1)

	'{'            shift, and enter state 7


State 7

	Fun -> fun main '(' ')' '{' . Commands '}'          (rule 1)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	print          shift, and enter state 28

	Commands       goto state 8
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Expr           goto state 15
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 8

	Fun -> fun main '(' ')' '{' Commands . '}'          (rule 1)

	'}'            shift, and enter state 59


State 9

	Commands -> Command . Commands                      (rule 3)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	print          shift, and enter state 28

	Commands       goto state 58
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Expr           goto state 15
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 10

	Command -> Print .                                  (rule 10)

	id             reduce using rule 10
	num            reduce using rule 10
	'('            reduce using rule 10
	'}'            reduce using rule 10
	if             reduce using rule 10
	while          reduce using rule 10
	val            reduce using rule 10
	var            reduce using rule 10
	'!'            reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	print          reduce using rule 10


State 11

	Command -> If .                                     (rule 8)

	id             reduce using rule 8
	num            reduce using rule 8
	'('            reduce using rule 8
	'}'            reduce using rule 8
	if             reduce using rule 8
	while          reduce using rule 8
	val            reduce using rule 8
	var            reduce using rule 8
	'!'            reduce using rule 8
	true           reduce using rule 8
	false          reduce using rule 8
	print          reduce using rule 8


State 12

	Command -> While .                                  (rule 9)

	id             reduce using rule 9
	num            reduce using rule 9
	'('            reduce using rule 9
	'}'            reduce using rule 9
	if             reduce using rule 9
	while          reduce using rule 9
	val            reduce using rule 9
	var            reduce using rule 9
	'!'            reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	print          reduce using rule 9


State 13

	Command -> Decl .                                   (rule 5)

	id             reduce using rule 5
	num            reduce using rule 5
	'('            reduce using rule 5
	'}'            reduce using rule 5
	if             reduce using rule 5
	while          reduce using rule 5
	val            reduce using rule 5
	var            reduce using rule 5
	'!'            reduce using rule 5
	true           reduce using rule 5
	false          reduce using rule 5
	print          reduce using rule 5


State 14

	Command -> Assign .                                 (rule 6)

	id             reduce using rule 6
	num            reduce using rule 6
	'('            reduce using rule 6
	'}'            reduce using rule 6
	if             reduce using rule 6
	while          reduce using rule 6
	val            reduce using rule 6
	var            reduce using rule 6
	'!'            reduce using rule 6
	true           reduce using rule 6
	false          reduce using rule 6
	print          reduce using rule 6


State 15

	Command -> Expr .                                   (rule 7)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 7
	num            reduce using rule 7
	'('            reduce using rule 7
	'}'            reduce using rule 7
	if             reduce using rule 7
	while          reduce using rule 7
	val            reduce using rule 7
	var            reduce using rule 7
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 7
	true           reduce using rule 7
	false          reduce using rule 7
	print          reduce using rule 7


State 16

	Expr -> PostIncDecExp .                             (rule 38)

	id             reduce using rule 38
	num            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	if             reduce using rule 38
	while          reduce using rule 38
	val            reduce using rule 38
	var            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'%'            reduce using rule 38
	'>'            reduce using rule 38
	">="           reduce using rule 38
	'<'            reduce using rule 38
	"<="           reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	"&&"           reduce using rule 38
	"||"           reduce using rule 38
	'!'            reduce using rule 38
	true           reduce using rule 38
	false          reduce using rule 38
	print          reduce using rule 38


State 17

	Expr -> Atomic .                                    (rule 49)

	id             reduce using rule 49
	num            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'}'            reduce using rule 49
	if             reduce using rule 49
	while          reduce using rule 49
	val            reduce using rule 49
	var            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'%'            reduce using rule 49
	'>'            reduce using rule 49
	">="           reduce using rule 49
	'<'            reduce using rule 49
	"<="           reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	"&&"           reduce using rule 49
	"||"           reduce using rule 49
	'!'            reduce using rule 49
	true           reduce using rule 49
	false          reduce using rule 49
	print          reduce using rule 49


State 18

	Assign -> id . '=' Expr                             (rule 27)
	Assign -> id . "+=" Expr                            (rule 28)
	Assign -> id . "-=" Expr                            (rule 29)
	Assign -> id . "*=" Expr                            (rule 30)
	Assign -> id . "/=" Expr                            (rule 31)
	Assign -> id . "%=" Expr                            (rule 32)
	PostIncDecExp -> id . "++"                          (rule 50)
	PostIncDecExp -> id . "--"                          (rule 51)
	Atomic -> id .                                      (rule 52)

	id             reduce using rule 52
	num            reduce using rule 52
	'('            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	val            reduce using rule 52
	var            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'>'            reduce using rule 52
	">="           reduce using rule 52
	'<'            reduce using rule 52
	"<="           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	"&&"           reduce using rule 52
	"||"           reduce using rule 52
	'!'            reduce using rule 52
	"++"           shift, and enter state 37
	"--"           shift, and enter state 38
	'='            shift, and enter state 39
	"+="           shift, and enter state 40
	"-="           shift, and enter state 41
	"*="           shift, and enter state 42
	"/="           shift, and enter state 43
	"%="           shift, and enter state 44
	true           reduce using rule 52
	false          reduce using rule 52
	print          reduce using rule 52


State 19

	Atomic -> num .                                     (rule 53)

	id             reduce using rule 53
	num            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	if             reduce using rule 53
	while          reduce using rule 53
	val            reduce using rule 53
	var            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'>'            reduce using rule 53
	">="           reduce using rule 53
	'<'            reduce using rule 53
	"<="           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"&&"           reduce using rule 53
	"||"           reduce using rule 53
	'!'            reduce using rule 53
	true           reduce using rule 53
	false          reduce using rule 53
	print          reduce using rule 53


State 20

	Expr -> '(' . Expr ')'                              (rule 48)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 36
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 21

	If -> if . '(' Expr ')' '{' Commands '}'            (rule 13)
	If -> if . '(' Expr ')' '{' Commands '}' else '{' Commands '}'    (rule 14)

	'('            shift, and enter state 35


State 22

	While -> while . '(' Expr ')' '{' Commands '}'      (rule 15)

	'('            shift, and enter state 34


State 23

	Decl -> val . id '=' InitExp                        (rule 24)
	Decl -> val . id ':' Type '=' InitExp               (rule 26)

	id             shift, and enter state 33


State 24

	Decl -> var . id '=' InitExp                        (rule 23)
	Decl -> var . id ':' Type '=' InitExp               (rule 25)

	id             shift, and enter state 32


State 25

	Expr -> '!' . Expr                                  (rule 47)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 30
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 26

	Atomic -> true .                                    (rule 54)

	id             reduce using rule 54
	num            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	if             reduce using rule 54
	while          reduce using rule 54
	val            reduce using rule 54
	var            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'>'            reduce using rule 54
	">="           reduce using rule 54
	'<'            reduce using rule 54
	"<="           reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"&&"           reduce using rule 54
	"||"           reduce using rule 54
	'!'            reduce using rule 54
	true           reduce using rule 54
	false          reduce using rule 54
	print          reduce using rule 54


State 27

	Atomic -> false .                                   (rule 55)

	id             reduce using rule 55
	num            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	if             reduce using rule 55
	while          reduce using rule 55
	val            reduce using rule 55
	var            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'>'            reduce using rule 55
	">="           reduce using rule 55
	'<'            reduce using rule 55
	"<="           reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	'!'            reduce using rule 55
	true           reduce using rule 55
	false          reduce using rule 55
	print          reduce using rule 55


State 28

	Print -> print . '(' InitExp ')'                    (rule 12)

	'('            shift, and enter state 29


State 29

	Print -> print '(' . InitExp ')'                    (rule 12)

	id             shift, and enter state 31
	num            shift, and enter state 19
	str            shift, and enter state 90
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	readln         shift, and enter state 91

	Readln         goto state 86
	InitExp        goto state 87
	Expr           goto state 88
	PostIncDecExp  goto state 16
	Atomic         goto state 17
	Sexp           goto state 89

State 30

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)
	Expr -> '!' Expr .                                  (rule 47)

	id             reduce using rule 47
	num            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	val            reduce using rule 47
	var            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'%'            reduce using rule 47
	'>'            reduce using rule 47
	">="           reduce using rule 47
	'<'            reduce using rule 47
	"<="           reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	"&&"           reduce using rule 47
	"||"           reduce using rule 47
	'!'            reduce using rule 47
	true           reduce using rule 47
	false          reduce using rule 47
	print          reduce using rule 47


State 31

	PostIncDecExp -> id . "++"                          (rule 50)
	PostIncDecExp -> id . "--"                          (rule 51)
	Atomic -> id .                                      (rule 52)

	id             reduce using rule 52
	num            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	val            reduce using rule 52
	var            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'>'            reduce using rule 52
	">="           reduce using rule 52
	'<'            reduce using rule 52
	"<="           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	"&&"           reduce using rule 52
	"||"           reduce using rule 52
	'!'            reduce using rule 52
	"++"           shift, and enter state 37
	"--"           shift, and enter state 38
	true           reduce using rule 52
	false          reduce using rule 52
	print          reduce using rule 52


State 32

	Decl -> var id . '=' InitExp                        (rule 23)
	Decl -> var id . ':' Type '=' InitExp               (rule 25)

	'='            shift, and enter state 84
	':'            shift, and enter state 85


State 33

	Decl -> val id . '=' InitExp                        (rule 24)
	Decl -> val id . ':' Type '=' InitExp               (rule 26)

	'='            shift, and enter state 82
	':'            shift, and enter state 83


State 34

	While -> while '(' . Expr ')' '{' Commands '}'      (rule 15)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 81
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 35

	If -> if '(' . Expr ')' '{' Commands '}'            (rule 13)
	If -> if '(' . Expr ')' '{' Commands '}' else '{' Commands '}'    (rule 14)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 80
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 36

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)
	Expr -> '(' Expr . ')'                              (rule 48)

	')'            shift, and enter state 79
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 37

	PostIncDecExp -> id "++" .                          (rule 50)

	id             reduce using rule 50
	num            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	if             reduce using rule 50
	while          reduce using rule 50
	val            reduce using rule 50
	var            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'%'            reduce using rule 50
	'>'            reduce using rule 50
	">="           reduce using rule 50
	'<'            reduce using rule 50
	"<="           reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	"&&"           reduce using rule 50
	"||"           reduce using rule 50
	'!'            reduce using rule 50
	true           reduce using rule 50
	false          reduce using rule 50
	print          reduce using rule 50


State 38

	PostIncDecExp -> id "--" .                          (rule 51)

	id             reduce using rule 51
	num            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	if             reduce using rule 51
	while          reduce using rule 51
	val            reduce using rule 51
	var            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'>'            reduce using rule 51
	">="           reduce using rule 51
	'<'            reduce using rule 51
	"<="           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"&&"           reduce using rule 51
	"||"           reduce using rule 51
	'!'            reduce using rule 51
	true           reduce using rule 51
	false          reduce using rule 51
	print          reduce using rule 51


State 39

	Assign -> id '=' . Expr                             (rule 27)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 78
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 40

	Assign -> id "+=" . Expr                            (rule 28)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 77
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 41

	Assign -> id "-=" . Expr                            (rule 29)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 76
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 42

	Assign -> id "*=" . Expr                            (rule 30)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 75
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 43

	Assign -> id "/=" . Expr                            (rule 31)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 74
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 44

	Assign -> id "%=" . Expr                            (rule 32)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 73
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 45

	Expr -> Expr '+' . Expr                             (rule 33)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 72
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 46

	Expr -> Expr '-' . Expr                             (rule 34)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 71
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 47

	Expr -> Expr '*' . Expr                             (rule 35)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 70
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 48

	Expr -> Expr '/' . Expr                             (rule 36)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 69
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 49

	Expr -> Expr '%' . Expr                             (rule 37)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 68
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 50

	Expr -> Expr '>' . Expr                             (rule 41)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 67
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 51

	Expr -> Expr ">=" . Expr                            (rule 42)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 66
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 52

	Expr -> Expr '<' . Expr                             (rule 43)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 65
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 53

	Expr -> Expr "<=" . Expr                            (rule 44)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 64
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 54

	Expr -> Expr "==" . Expr                            (rule 45)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 63
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 55

	Expr -> Expr "!=" . Expr                            (rule 46)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 62
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 56

	Expr -> Expr "&&" . Expr                            (rule 39)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 61
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 57

	Expr -> Expr "||" . Expr                            (rule 40)

	id             shift, and enter state 31
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27

	Expr           goto state 60
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 58

	Commands -> Command Commands .                      (rule 3)

	'}'            reduce using rule 3


State 59

	Fun -> fun main '(' ')' '{' Commands '}' .          (rule 1)

	%eof           reduce using rule 1


State 60

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr "||" Expr .                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 40
	num            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	if             reduce using rule 40
	while          reduce using rule 40
	val            reduce using rule 40
	var            reduce using rule 40
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           reduce using rule 40
	'!'            reduce using rule 40
	true           reduce using rule 40
	false          reduce using rule 40
	print          reduce using rule 40


State 61

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr "&&" Expr .                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 39
	num            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	if             reduce using rule 39
	while          reduce using rule 39
	val            reduce using rule 39
	var            reduce using rule 39
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           reduce using rule 39
	"||"           reduce using rule 39
	'!'            reduce using rule 39
	true           reduce using rule 39
	false          reduce using rule 39
	print          reduce using rule 39


State 62

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)
	Expr -> Expr "!=" Expr .                            (rule 46)

	id             reduce using rule 46
	num            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	val            reduce using rule 46
	var            reduce using rule 46
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 46
	"||"           reduce using rule 46
	'!'            reduce using rule 46
	true           reduce using rule 46
	false          reduce using rule 46
	print          reduce using rule 46


State 63

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr "==" Expr .                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 45
	num            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	if             reduce using rule 45
	while          reduce using rule 45
	val            reduce using rule 45
	var            reduce using rule 45
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           fail
	"!="           fail
	"&&"           reduce using rule 45
	"||"           reduce using rule 45
	'!'            reduce using rule 45
	true           reduce using rule 45
	false          reduce using rule 45
	print          reduce using rule 45


State 64

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr "<=" Expr .                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 44
	num            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	if             reduce using rule 44
	while          reduce using rule 44
	val            reduce using rule 44
	var            reduce using rule 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	"&&"           reduce using rule 44
	"||"           reduce using rule 44
	'!'            reduce using rule 44
	true           reduce using rule 44
	false          reduce using rule 44
	print          reduce using rule 44


State 65

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr '<' Expr .                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 43
	num            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	if             reduce using rule 43
	while          reduce using rule 43
	val            reduce using rule 43
	var            reduce using rule 43
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	"&&"           reduce using rule 43
	"||"           reduce using rule 43
	'!'            reduce using rule 43
	true           reduce using rule 43
	false          reduce using rule 43
	print          reduce using rule 43


State 66

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr ">=" Expr .                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 42
	num            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	if             reduce using rule 42
	while          reduce using rule 42
	val            reduce using rule 42
	var            reduce using rule 42
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	"&&"           reduce using rule 42
	"||"           reduce using rule 42
	'!'            reduce using rule 42
	true           reduce using rule 42
	false          reduce using rule 42
	print          reduce using rule 42


State 67

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr '>' Expr .                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 41
	num            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	if             reduce using rule 41
	while          reduce using rule 41
	val            reduce using rule 41
	var            reduce using rule 41
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            fail
	">="           fail
	'<'            fail
	"<="           fail
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	"&&"           reduce using rule 41
	"||"           reduce using rule 41
	'!'            reduce using rule 41
	true           reduce using rule 41
	false          reduce using rule 41
	print          reduce using rule 41


State 68

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr '%' Expr .                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 37
	num            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	if             reduce using rule 37
	while          reduce using rule 37
	val            reduce using rule 37
	var            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	'>'            reduce using rule 37
	">="           reduce using rule 37
	'<'            reduce using rule 37
	"<="           reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	"&&"           reduce using rule 37
	"||"           reduce using rule 37
	'!'            reduce using rule 37
	true           reduce using rule 37
	false          reduce using rule 37
	print          reduce using rule 37


State 69

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr '/' Expr .                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 36
	num            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'}'            reduce using rule 36
	if             reduce using rule 36
	while          reduce using rule 36
	val            reduce using rule 36
	var            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'%'            reduce using rule 36
	'>'            reduce using rule 36
	">="           reduce using rule 36
	'<'            reduce using rule 36
	"<="           reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	"&&"           reduce using rule 36
	"||"           reduce using rule 36
	'!'            reduce using rule 36
	true           reduce using rule 36
	false          reduce using rule 36
	print          reduce using rule 36


State 70

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr '*' Expr .                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 35
	num            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'}'            reduce using rule 35
	if             reduce using rule 35
	while          reduce using rule 35
	val            reduce using rule 35
	var            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'%'            reduce using rule 35
	'>'            reduce using rule 35
	">="           reduce using rule 35
	'<'            reduce using rule 35
	"<="           reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	"&&"           reduce using rule 35
	"||"           reduce using rule 35
	'!'            reduce using rule 35
	true           reduce using rule 35
	false          reduce using rule 35
	print          reduce using rule 35


State 71

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr '-' Expr .                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 34
	num            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'}'            reduce using rule 34
	if             reduce using rule 34
	while          reduce using rule 34
	val            reduce using rule 34
	var            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            reduce using rule 34
	">="           reduce using rule 34
	'<'            reduce using rule 34
	"<="           reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	"&&"           reduce using rule 34
	"||"           reduce using rule 34
	'!'            reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	print          reduce using rule 34


State 72

	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr '+' Expr .                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 33
	num            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'}'            reduce using rule 33
	if             reduce using rule 33
	while          reduce using rule 33
	val            reduce using rule 33
	var            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            reduce using rule 33
	">="           reduce using rule 33
	'<'            reduce using rule 33
	"<="           reduce using rule 33
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	"&&"           reduce using rule 33
	"||"           reduce using rule 33
	'!'            reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	print          reduce using rule 33


State 73

	Assign -> id "%=" Expr .                            (rule 32)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 32
	num            reduce using rule 32
	'('            reduce using rule 32
	'}'            reduce using rule 32
	if             reduce using rule 32
	while          reduce using rule 32
	val            reduce using rule 32
	var            reduce using rule 32
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	print          reduce using rule 32


State 74

	Assign -> id "/=" Expr .                            (rule 31)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 31
	num            reduce using rule 31
	'('            reduce using rule 31
	'}'            reduce using rule 31
	if             reduce using rule 31
	while          reduce using rule 31
	val            reduce using rule 31
	var            reduce using rule 31
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	print          reduce using rule 31


State 75

	Assign -> id "*=" Expr .                            (rule 30)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 30
	num            reduce using rule 30
	'('            reduce using rule 30
	'}'            reduce using rule 30
	if             reduce using rule 30
	while          reduce using rule 30
	val            reduce using rule 30
	var            reduce using rule 30
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	print          reduce using rule 30


State 76

	Assign -> id "-=" Expr .                            (rule 29)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 29
	num            reduce using rule 29
	'('            reduce using rule 29
	'}'            reduce using rule 29
	if             reduce using rule 29
	while          reduce using rule 29
	val            reduce using rule 29
	var            reduce using rule 29
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	print          reduce using rule 29


State 77

	Assign -> id "+=" Expr .                            (rule 28)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 28
	num            reduce using rule 28
	'('            reduce using rule 28
	'}'            reduce using rule 28
	if             reduce using rule 28
	while          reduce using rule 28
	val            reduce using rule 28
	var            reduce using rule 28
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	print          reduce using rule 28


State 78

	Assign -> id '=' Expr .                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 27
	num            reduce using rule 27
	'('            reduce using rule 27
	'}'            reduce using rule 27
	if             reduce using rule 27
	while          reduce using rule 27
	val            reduce using rule 27
	var            reduce using rule 27
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	print          reduce using rule 27


State 79

	Expr -> '(' Expr ')' .                              (rule 48)

	id             reduce using rule 48
	num            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'}'            reduce using rule 48
	if             reduce using rule 48
	while          reduce using rule 48
	val            reduce using rule 48
	var            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'%'            reduce using rule 48
	'>'            reduce using rule 48
	">="           reduce using rule 48
	'<'            reduce using rule 48
	"<="           reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	"&&"           reduce using rule 48
	"||"           reduce using rule 48
	'!'            reduce using rule 48
	true           reduce using rule 48
	false          reduce using rule 48
	print          reduce using rule 48


State 80

	If -> if '(' Expr . ')' '{' Commands '}'            (rule 13)
	If -> if '(' Expr . ')' '{' Commands '}' else '{' Commands '}'    (rule 14)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	')'            shift, and enter state 103
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 81

	While -> while '(' Expr . ')' '{' Commands '}'      (rule 15)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	')'            shift, and enter state 102
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 82

	Decl -> val id '=' . InitExp                        (rule 24)

	id             shift, and enter state 31
	num            shift, and enter state 19
	str            shift, and enter state 90
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	readln         shift, and enter state 91

	Readln         goto state 86
	InitExp        goto state 101
	Expr           goto state 88
	PostIncDecExp  goto state 16
	Atomic         goto state 17
	Sexp           goto state 89

State 83

	Decl -> val id ':' . Type '=' InitExp               (rule 26)

	int            shift, and enter state 95
	float          shift, and enter state 96
	boolean        shift, and enter state 97
	string         shift, and enter state 98

	Type           goto state 100

State 84

	Decl -> var id '=' . InitExp                        (rule 23)

	id             shift, and enter state 31
	num            shift, and enter state 19
	str            shift, and enter state 90
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	readln         shift, and enter state 91

	Readln         goto state 86
	InitExp        goto state 99
	Expr           goto state 88
	PostIncDecExp  goto state 16
	Atomic         goto state 17
	Sexp           goto state 89

State 85

	Decl -> var id ':' . Type '=' InitExp               (rule 25)

	int            shift, and enter state 95
	float          shift, and enter state 96
	boolean        shift, and enter state 97
	string         shift, and enter state 98

	Type           goto state 94

State 86

	InitExp -> Readln .                                 (rule 22)

	id             reduce using rule 22
	num            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'}'            reduce using rule 22
	if             reduce using rule 22
	while          reduce using rule 22
	val            reduce using rule 22
	var            reduce using rule 22
	'!'            reduce using rule 22
	true           reduce using rule 22
	false          reduce using rule 22
	print          reduce using rule 22


State 87

	Print -> print '(' InitExp . ')'                    (rule 12)

	')'            shift, and enter state 93


State 88

	InitExp -> Expr .                                   (rule 20)
	Expr -> Expr . '+' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr . '*' Expr                             (rule 35)
	Expr -> Expr . '/' Expr                             (rule 36)
	Expr -> Expr . '%' Expr                             (rule 37)
	Expr -> Expr . "&&" Expr                            (rule 39)
	Expr -> Expr . "||" Expr                            (rule 40)
	Expr -> Expr . '>' Expr                             (rule 41)
	Expr -> Expr . ">=" Expr                            (rule 42)
	Expr -> Expr . '<' Expr                             (rule 43)
	Expr -> Expr . "<=" Expr                            (rule 44)
	Expr -> Expr . "==" Expr                            (rule 45)
	Expr -> Expr . "!=" Expr                            (rule 46)

	id             reduce using rule 20
	num            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'}'            reduce using rule 20
	if             reduce using rule 20
	while          reduce using rule 20
	val            reduce using rule 20
	var            reduce using rule 20
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	'>'            shift, and enter state 50
	">="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	"=="           shift, and enter state 54
	"!="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57
	'!'            reduce using rule 20
	true           reduce using rule 20
	false          reduce using rule 20
	print          reduce using rule 20


State 89

	InitExp -> Sexp .                                   (rule 21)

	id             reduce using rule 21
	num            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'}'            reduce using rule 21
	if             reduce using rule 21
	while          reduce using rule 21
	val            reduce using rule 21
	var            reduce using rule 21
	'!'            reduce using rule 21
	true           reduce using rule 21
	false          reduce using rule 21
	print          reduce using rule 21


State 90

	Sexp -> str .                                       (rule 56)

	id             reduce using rule 56
	num            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	if             reduce using rule 56
	while          reduce using rule 56
	val            reduce using rule 56
	var            reduce using rule 56
	'!'            reduce using rule 56
	true           reduce using rule 56
	false          reduce using rule 56
	print          reduce using rule 56


State 91

	Readln -> readln . '(' ')'                          (rule 11)

	'('            shift, and enter state 92


State 92

	Readln -> readln '(' . ')'                          (rule 11)

	')'            shift, and enter state 108


State 93

	Print -> print '(' InitExp ')' .                    (rule 12)

	id             reduce using rule 12
	num            reduce using rule 12
	'('            reduce using rule 12
	'}'            reduce using rule 12
	if             reduce using rule 12
	while          reduce using rule 12
	val            reduce using rule 12
	var            reduce using rule 12
	'!'            reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	print          reduce using rule 12


State 94

	Decl -> var id ':' Type . '=' InitExp               (rule 25)

	'='            shift, and enter state 107


State 95

	Type -> int .                                       (rule 16)

	'='            reduce using rule 16


State 96

	Type -> float .                                     (rule 17)

	'='            reduce using rule 17


State 97

	Type -> boolean .                                   (rule 18)

	'='            reduce using rule 18


State 98

	Type -> string .                                    (rule 19)

	'='            reduce using rule 19


State 99

	Decl -> var id '=' InitExp .                        (rule 23)

	id             reduce using rule 23
	num            reduce using rule 23
	'('            reduce using rule 23
	'}'            reduce using rule 23
	if             reduce using rule 23
	while          reduce using rule 23
	val            reduce using rule 23
	var            reduce using rule 23
	'!'            reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	print          reduce using rule 23


State 100

	Decl -> val id ':' Type . '=' InitExp               (rule 26)

	'='            shift, and enter state 106


State 101

	Decl -> val id '=' InitExp .                        (rule 24)

	id             reduce using rule 24
	num            reduce using rule 24
	'('            reduce using rule 24
	'}'            reduce using rule 24
	if             reduce using rule 24
	while          reduce using rule 24
	val            reduce using rule 24
	var            reduce using rule 24
	'!'            reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	print          reduce using rule 24


State 102

	While -> while '(' Expr ')' . '{' Commands '}'      (rule 15)

	'{'            shift, and enter state 105


State 103

	If -> if '(' Expr ')' . '{' Commands '}'            (rule 13)
	If -> if '(' Expr ')' . '{' Commands '}' else '{' Commands '}'    (rule 14)

	'{'            shift, and enter state 104


State 104

	If -> if '(' Expr ')' '{' . Commands '}'            (rule 13)
	If -> if '(' Expr ')' '{' . Commands '}' else '{' Commands '}'    (rule 14)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	print          shift, and enter state 28

	Commands       goto state 112
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Expr           goto state 15
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 105

	While -> while '(' Expr ')' '{' . Commands '}'      (rule 15)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	print          shift, and enter state 28

	Commands       goto state 111
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Expr           goto state 15
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 106

	Decl -> val id ':' Type '=' . InitExp               (rule 26)

	id             shift, and enter state 31
	num            shift, and enter state 19
	str            shift, and enter state 90
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	readln         shift, and enter state 91

	Readln         goto state 86
	InitExp        goto state 110
	Expr           goto state 88
	PostIncDecExp  goto state 16
	Atomic         goto state 17
	Sexp           goto state 89

State 107

	Decl -> var id ':' Type '=' . InitExp               (rule 25)

	id             shift, and enter state 31
	num            shift, and enter state 19
	str            shift, and enter state 90
	'('            shift, and enter state 20
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	readln         shift, and enter state 91

	Readln         goto state 86
	InitExp        goto state 109
	Expr           goto state 88
	PostIncDecExp  goto state 16
	Atomic         goto state 17
	Sexp           goto state 89

State 108

	Readln -> readln '(' ')' .                          (rule 11)

	id             reduce using rule 11
	num            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	'}'            reduce using rule 11
	if             reduce using rule 11
	while          reduce using rule 11
	val            reduce using rule 11
	var            reduce using rule 11
	'!'            reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	print          reduce using rule 11


State 109

	Decl -> var id ':' Type '=' InitExp .               (rule 25)

	id             reduce using rule 25
	num            reduce using rule 25
	'('            reduce using rule 25
	'}'            reduce using rule 25
	if             reduce using rule 25
	while          reduce using rule 25
	val            reduce using rule 25
	var            reduce using rule 25
	'!'            reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	print          reduce using rule 25


State 110

	Decl -> val id ':' Type '=' InitExp .               (rule 26)

	id             reduce using rule 26
	num            reduce using rule 26
	'('            reduce using rule 26
	'}'            reduce using rule 26
	if             reduce using rule 26
	while          reduce using rule 26
	val            reduce using rule 26
	var            reduce using rule 26
	'!'            reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	print          reduce using rule 26


State 111

	While -> while '(' Expr ')' '{' Commands . '}'      (rule 15)

	'}'            shift, and enter state 114


State 112

	If -> if '(' Expr ')' '{' Commands . '}'            (rule 13)
	If -> if '(' Expr ')' '{' Commands . '}' else '{' Commands '}'    (rule 14)

	'}'            shift, and enter state 113


State 113

	If -> if '(' Expr ')' '{' Commands '}' .            (rule 13)
	If -> if '(' Expr ')' '{' Commands '}' . else '{' Commands '}'    (rule 14)

	id             reduce using rule 13
	num            reduce using rule 13
	'('            reduce using rule 13
	'}'            reduce using rule 13
	if             reduce using rule 13
	else           shift, and enter state 115
	while          reduce using rule 13
	val            reduce using rule 13
	var            reduce using rule 13
	'!'            reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	print          reduce using rule 13


State 114

	While -> while '(' Expr ')' '{' Commands '}' .      (rule 15)

	id             reduce using rule 15
	num            reduce using rule 15
	'('            reduce using rule 15
	'}'            reduce using rule 15
	if             reduce using rule 15
	while          reduce using rule 15
	val            reduce using rule 15
	var            reduce using rule 15
	'!'            reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	print          reduce using rule 15


State 115

	If -> if '(' Expr ')' '{' Commands '}' else . '{' Commands '}'    (rule 14)

	'{'            shift, and enter state 116


State 116

	If -> if '(' Expr ')' '{' Commands '}' else '{' . Commands '}'    (rule 14)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	'!'            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	print          shift, and enter state 28

	Commands       goto state 117
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Expr           goto state 15
	PostIncDecExp  goto state 16
	Atomic         goto state 17

State 117

	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands . '}'    (rule 14)

	'}'            shift, and enter state 118


State 118

	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands '}' .    (rule 14)

	id             reduce using rule 14
	num            reduce using rule 14
	'('            reduce using rule 14
	'}'            reduce using rule 14
	if             reduce using rule 14
	while          reduce using rule 14
	val            reduce using rule 14
	var            reduce using rule 14
	'!'            reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	print          reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 57
Number of terminals: 45
Number of non-terminals: 16
Number of states: 119
