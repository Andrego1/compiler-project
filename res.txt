Tokens:
[FUN,MAIN,LPAREN,RPAREN,LBRACE,VAR,ID "i",COLON,INT,ATRIB,NUM 1,IF,LPAREN,ID "i",PLUS,NUM 1,EQUAL,NUM 3,RPAREN,LBRACE,RETURN,RBRACE,ELSE,LBRACE,ID "i",ATRIB_PLUS,NUM 1,RBRACE,PRINT,LPAREN,ID "i",RPAREN,RBRACE]

AST:
ProgramNode [VarDeclTyped (IdNode "i") IntType (NumNode 1),IfElseNode (EqNode (AddNode (IdNode "i") (NumNode 1)) (NumNode 3)) [ReturnNode] [AddAssignNode "i" (NumNode 1)],PrintNode (IdNode "i")]

Semantic Analysis:
True

Symbol Table:
fromList [("i",(IntType,True))]

Intermediate Code:
LABEL "main"
MOVEI "t0" 1
MOVE "t2" "t0"
MOVEI "t3" 1
OP Plus "t1" "t2" "t3"
MOVEI "t2" 3
COND "t1" Eq "t2" "L0" "L1"
LABEL "L0"
JUMP "end"
JUMP "L2"
LABEL "L1"
MOVE "t1" "t0"
MOVEI "t2" 1
OP Plus "t0" "t1" "t2"
LABEL "L2"
MOVE "t1" "t0"
PRINTI "t1"
LABEL "end"

MIPS Code:
.text
.globl main
main:
li $t0, 1
move $t2, $t0
li $t3, 1
add $t1, $t2, $t3
li $t2, 3
beq $t1, $t2, L0
j L1
L0:
j end
j L2
L1:
move $t1, $t0
li $t2, 1
add $t0, $t1, $t2
L2:
move $t1, $t0
move $a0, $t1
li $v0, 1
syscall
end:
li $v0, 10
syscall
