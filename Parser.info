-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------

state 64 contains 10 reduce/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Fun                                (0)
	Fun -> fun main '(' ')' '{' Commands '}'           (1)
	Fun ->                                             (2)
	Commands -> Command Commands                       (3)
	Commands ->                                        (4)
	Command -> Decl                                    (5)
	Command -> Assign                                  (6)
	Command -> Aexp                                    (7)
	Command -> If                                      (8)
	Command -> While                                   (9)
	Command -> Print                                   (10)
	Readln -> readln '(' ')'                           (11)
	Print -> print '(' InitExp ')'                     (12)
	If -> if '(' Expr ')' '{' Commands '}'             (13)
	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands '}'   (14)
	While -> while '(' Expr ')' '{' Commands '}'       (15)
	Type -> int                                        (16)
	Type -> float                                      (17)
	Type -> boolean                                    (18)
	Type -> string                                     (19)
	InitExp -> Expr                                    (20)
	InitExp -> Sexp                                    (21)
	InitExp -> Readln                                  (22)
	Decl -> var id '=' InitExp                         (23)
	Decl -> val id '=' InitExp                         (24)
	Decl -> var id ':' Type '=' InitExp                (25)
	Decl -> val id ':' Type '=' InitExp                (26)
	Assign -> id '=' Aexp                              (27)
	Assign -> id "+=" Aexp                             (28)
	Assign -> id "-=" Aexp                             (29)
	Assign -> id "*=" Aexp                             (30)
	Assign -> id "/=" Aexp                             (31)
	Assign -> id "%=" Aexp                             (32)
	Expr -> BoolExpr                                   (33)
	Expr -> Aexp                                       (34)
	BoolExpr -> AtomicBool "&&" AtomicBool             (35)
	BoolExpr -> AtomicBool "||" AtomicBool             (36)
	BoolExpr -> Aexp '>' Aexp                          (37)
	BoolExpr -> Aexp ">=" Aexp                         (38)
	BoolExpr -> Aexp '<' Aexp                          (39)
	BoolExpr -> Aexp "<=" Aexp                         (40)
	BoolExpr -> Aexp "==" Aexp                         (41)
	BoolExpr -> Aexp "!=" Aexp                         (42)
	BoolExpr -> '!' BoolExpr                           (43)
	BoolExpr -> AtomicBool                             (44)
	Aexp -> Aexp '+' Aexp                              (45)
	Aexp -> Aexp '-' Aexp                              (46)
	Aexp -> Aexp '*' Aexp                              (47)
	Aexp -> Aexp '/' Aexp                              (48)
	Aexp -> Aexp '%' Aexp                              (49)
	Aexp -> PostIncDecExp                              (50)
	Aexp -> AtomicAexp                                 (51)
	PostIncDecExp -> AtomicAexp "++"                   (52)
	PostIncDecExp -> AtomicAexp "--"                   (53)
	AtomicBool -> true                                 (54)
	AtomicBool -> false                                (55)
	AtomicBool -> id                                   (56)
	AtomicBool -> '(' BoolExpr ')'                     (57)
	AtomicAexp -> num                                  (58)
	AtomicAexp -> id                                   (59)
	AtomicAexp -> '(' Aexp ')'                         (60)
	Sexp -> str                                        (61)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { ID $$ }
	num            { NUM $$ }
	str            { STR $$ }
	'('            { LPAREN }
	')'            { RPAREN }
	'{'            { LBRACE }
	'}'            { RBRACE }
	if             { IF }
	else           { ELSE }
	while          { WHILE }
	int            { INT }
	float          { FLOAT }
	boolean        { BOOLEAN }
	string         { STRING }
	fun            { FUN }
	main           { MAIN }
	val            { VAL }
	var            { VAR }
	'+'            { PLUS }
	'-'            { MINUS }
	'*'            { MULT }
	'/'            { DIV }
	'%'            { MOD }
	'>'            { G }
	">="           { GEQ }
	'<'            { L }
	"<="           { LEQ }
	"=="           { EQUAL }
	"!="           { NEQUAL }
	"&&"           { AND }
	"||"           { OR }
	'!'            { NOT }
	"++"           { ICR }
	"--"           { DCR }
	'='            { ATRIB }
	"+="           { ATRIB_PLUS }
	"-="           { ATRIB_MINUS }
	"*="           { ATRIB_MULT }
	"/="           { ATRIB_DIV }
	"%="           { ATRIB_MOD }
	true           { TRUE }
	false          { FALSE }
	readln         { READLN }
	print          { PRINT }
	':'            { COLON }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Fun             rules 1, 2
	Commands        rules 3, 4
	Command         rules 5, 6, 7, 8, 9, 10
	Readln          rule  11
	Print           rule  12
	If              rules 13, 14
	While           rule  15
	Type            rules 16, 17, 18, 19
	InitExp         rules 20, 21, 22
	Decl            rules 23, 24, 25, 26
	Assign          rules 27, 28, 29, 30, 31, 32
	Expr            rules 33, 34
	BoolExpr        rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
	Aexp            rules 45, 46, 47, 48, 49, 50, 51
	PostIncDecExp   rules 52, 53
	AtomicBool      rules 54, 55, 56, 57
	AtomicAexp      rules 58, 59, 60
	Sexp            rule  61

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	fun            shift, and enter state 2
	%eof           reduce using rule 2

	Fun            goto state 3

State 1


	fun            shift, and enter state 2


State 2

	Fun -> fun . main '(' ')' '{' Commands '}'          (rule 1)

	main           shift, and enter state 4


State 3

	%start_parse -> Fun .                               (rule 0)

	%eof           accept


State 4

	Fun -> fun main . '(' ')' '{' Commands '}'          (rule 1)

	'('            shift, and enter state 5


State 5

	Fun -> fun main '(' . ')' '{' Commands '}'          (rule 1)

	')'            shift, and enter state 6


State 6

	Fun -> fun main '(' ')' . '{' Commands '}'          (rule 1)

	'{'            shift, and enter state 7


State 7

	Fun -> fun main '(' ')' '{' . Commands '}'          (rule 1)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	print          shift, and enter state 25

	Commands       goto state 8
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Aexp           goto state 15
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 8

	Fun -> fun main '(' ')' '{' Commands . '}'          (rule 1)

	'}'            shift, and enter state 47


State 9

	Commands -> Command . Commands                      (rule 3)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	print          shift, and enter state 25

	Commands       goto state 46
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Aexp           goto state 15
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 10

	Command -> Print .                                  (rule 10)

	id             reduce using rule 10
	num            reduce using rule 10
	'('            reduce using rule 10
	'}'            reduce using rule 10
	if             reduce using rule 10
	while          reduce using rule 10
	val            reduce using rule 10
	var            reduce using rule 10
	print          reduce using rule 10


State 11

	Command -> If .                                     (rule 8)

	id             reduce using rule 8
	num            reduce using rule 8
	'('            reduce using rule 8
	'}'            reduce using rule 8
	if             reduce using rule 8
	while          reduce using rule 8
	val            reduce using rule 8
	var            reduce using rule 8
	print          reduce using rule 8


State 12

	Command -> While .                                  (rule 9)

	id             reduce using rule 9
	num            reduce using rule 9
	'('            reduce using rule 9
	'}'            reduce using rule 9
	if             reduce using rule 9
	while          reduce using rule 9
	val            reduce using rule 9
	var            reduce using rule 9
	print          reduce using rule 9


State 13

	Command -> Decl .                                   (rule 5)

	id             reduce using rule 5
	num            reduce using rule 5
	'('            reduce using rule 5
	'}'            reduce using rule 5
	if             reduce using rule 5
	while          reduce using rule 5
	val            reduce using rule 5
	var            reduce using rule 5
	print          reduce using rule 5


State 14

	Command -> Assign .                                 (rule 6)

	id             reduce using rule 6
	num            reduce using rule 6
	'('            reduce using rule 6
	'}'            reduce using rule 6
	if             reduce using rule 6
	while          reduce using rule 6
	val            reduce using rule 6
	var            reduce using rule 6
	print          reduce using rule 6


State 15

	Command -> Aexp .                                   (rule 7)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 7
	num            reduce using rule 7
	'('            reduce using rule 7
	'}'            reduce using rule 7
	if             reduce using rule 7
	while          reduce using rule 7
	val            reduce using rule 7
	var            reduce using rule 7
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 7


State 16

	Aexp -> PostIncDecExp .                             (rule 50)

	id             reduce using rule 50
	num            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	if             reduce using rule 50
	while          reduce using rule 50
	val            reduce using rule 50
	var            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'%'            reduce using rule 50
	'>'            reduce using rule 50
	">="           reduce using rule 50
	'<'            reduce using rule 50
	"<="           reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	print          reduce using rule 50


State 17

	Aexp -> AtomicAexp .                                (rule 51)
	PostIncDecExp -> AtomicAexp . "++"                  (rule 52)
	PostIncDecExp -> AtomicAexp . "--"                  (rule 53)

	id             reduce using rule 51
	num            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	if             reduce using rule 51
	while          reduce using rule 51
	val            reduce using rule 51
	var            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'>'            reduce using rule 51
	">="           reduce using rule 51
	'<'            reduce using rule 51
	"<="           reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	"++"           shift, and enter state 39
	"--"           shift, and enter state 40
	print          reduce using rule 51


State 18

	Assign -> id . '=' Aexp                             (rule 27)
	Assign -> id . "+=" Aexp                            (rule 28)
	Assign -> id . "-=" Aexp                            (rule 29)
	Assign -> id . "*=" Aexp                            (rule 30)
	Assign -> id . "/=" Aexp                            (rule 31)
	Assign -> id . "%=" Aexp                            (rule 32)
	AtomicAexp -> id .                                  (rule 59)

	id             reduce using rule 59
	num            reduce using rule 59
	'('            reduce using rule 59
	'}'            reduce using rule 59
	if             reduce using rule 59
	while          reduce using rule 59
	val            reduce using rule 59
	var            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	"++"           reduce using rule 59
	"--"           reduce using rule 59
	'='            shift, and enter state 33
	"+="           shift, and enter state 34
	"-="           shift, and enter state 35
	"*="           shift, and enter state 36
	"/="           shift, and enter state 37
	"%="           shift, and enter state 38
	print          reduce using rule 59


State 19

	AtomicAexp -> num .                                 (rule 58)

	id             reduce using rule 58
	num            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'}'            reduce using rule 58
	if             reduce using rule 58
	while          reduce using rule 58
	val            reduce using rule 58
	var            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'>'            reduce using rule 58
	">="           reduce using rule 58
	'<'            reduce using rule 58
	"<="           reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"++"           reduce using rule 58
	"--"           reduce using rule 58
	print          reduce using rule 58


State 20

	AtomicAexp -> '(' . Aexp ')'                        (rule 60)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 31
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 21

	If -> if . '(' Expr ')' '{' Commands '}'            (rule 13)
	If -> if . '(' Expr ')' '{' Commands '}' else '{' Commands '}'    (rule 14)

	'('            shift, and enter state 30


State 22

	While -> while . '(' Expr ')' '{' Commands '}'      (rule 15)

	'('            shift, and enter state 29


State 23

	Decl -> val . id '=' InitExp                        (rule 24)
	Decl -> val . id ':' Type '=' InitExp               (rule 26)

	id             shift, and enter state 28


State 24

	Decl -> var . id '=' InitExp                        (rule 23)
	Decl -> var . id ':' Type '=' InitExp               (rule 25)

	id             shift, and enter state 27


State 25

	Print -> print . '(' InitExp ')'                    (rule 12)

	'('            shift, and enter state 26


State 26

	Print -> print '(' . InitExp ')'                    (rule 12)

	id             shift, and enter state 64
	num            shift, and enter state 19
	str            shift, and enter state 78
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68
	readln         shift, and enter state 79

	Readln         goto state 74
	InitExp        goto state 75
	Expr           goto state 76
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17
	Sexp           goto state 77

State 27

	Decl -> var id . '=' InitExp                        (rule 23)
	Decl -> var id . ':' Type '=' InitExp               (rule 25)

	'='            shift, and enter state 72
	':'            shift, and enter state 73


State 28

	Decl -> val id . '=' InitExp                        (rule 24)
	Decl -> val id . ':' Type '=' InitExp               (rule 26)

	'='            shift, and enter state 70
	':'            shift, and enter state 71


State 29

	While -> while '(' . Expr ')' '{' Commands '}'      (rule 15)

	id             shift, and enter state 64
	num            shift, and enter state 19
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68

	Expr           goto state 69
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17

State 30

	If -> if '(' . Expr ')' '{' Commands '}'            (rule 13)
	If -> if '(' . Expr ')' '{' Commands '}' else '{' Commands '}'    (rule 14)

	id             shift, and enter state 64
	num            shift, and enter state 19
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68

	Expr           goto state 60
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17

State 31

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)
	AtomicAexp -> '(' Aexp . ')'                        (rule 60)

	')'            shift, and enter state 59
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45


State 32

	AtomicAexp -> id .                                  (rule 59)

	id             reduce using rule 59
	num            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	if             reduce using rule 59
	while          reduce using rule 59
	val            reduce using rule 59
	var            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'>'            reduce using rule 59
	">="           reduce using rule 59
	'<'            reduce using rule 59
	"<="           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"++"           reduce using rule 59
	"--"           reduce using rule 59
	print          reduce using rule 59


State 33

	Assign -> id '=' . Aexp                             (rule 27)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 58
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 34

	Assign -> id "+=" . Aexp                            (rule 28)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 57
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 35

	Assign -> id "-=" . Aexp                            (rule 29)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 56
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 36

	Assign -> id "*=" . Aexp                            (rule 30)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 55
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 37

	Assign -> id "/=" . Aexp                            (rule 31)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 54
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 38

	Assign -> id "%=" . Aexp                            (rule 32)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 53
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 39

	PostIncDecExp -> AtomicAexp "++" .                  (rule 52)

	id             reduce using rule 52
	num            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	val            reduce using rule 52
	var            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'>'            reduce using rule 52
	">="           reduce using rule 52
	'<'            reduce using rule 52
	"<="           reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	print          reduce using rule 52


State 40

	PostIncDecExp -> AtomicAexp "--" .                  (rule 53)

	id             reduce using rule 53
	num            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	if             reduce using rule 53
	while          reduce using rule 53
	val            reduce using rule 53
	var            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'>'            reduce using rule 53
	">="           reduce using rule 53
	'<'            reduce using rule 53
	"<="           reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	print          reduce using rule 53


State 41

	Aexp -> Aexp '+' . Aexp                             (rule 45)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 52
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 42

	Aexp -> Aexp '-' . Aexp                             (rule 46)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 51
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 43

	Aexp -> Aexp '*' . Aexp                             (rule 47)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 50
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 44

	Aexp -> Aexp '/' . Aexp                             (rule 48)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 49
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 45

	Aexp -> Aexp '%' . Aexp                             (rule 49)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 48
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 46

	Commands -> Command Commands .                      (rule 3)

	'}'            reduce using rule 3


State 47

	Fun -> fun main '(' ')' '{' Commands '}' .          (rule 1)

	%eof           reduce using rule 1


State 48

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)
	Aexp -> Aexp '%' Aexp .                             (rule 49)

	id             reduce using rule 49
	num            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'}'            reduce using rule 49
	if             reduce using rule 49
	while          reduce using rule 49
	val            reduce using rule 49
	var            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'%'            reduce using rule 49
	'>'            reduce using rule 49
	">="           reduce using rule 49
	'<'            reduce using rule 49
	"<="           reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	print          reduce using rule 49


State 49

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp '/' Aexp .                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 48
	num            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'}'            reduce using rule 48
	if             reduce using rule 48
	while          reduce using rule 48
	val            reduce using rule 48
	var            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'%'            reduce using rule 48
	'>'            reduce using rule 48
	">="           reduce using rule 48
	'<'            reduce using rule 48
	"<="           reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	print          reduce using rule 48


State 50

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp '*' Aexp .                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 47
	num            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'}'            reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	val            reduce using rule 47
	var            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'%'            reduce using rule 47
	'>'            reduce using rule 47
	">="           reduce using rule 47
	'<'            reduce using rule 47
	"<="           reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	print          reduce using rule 47


State 51

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp '-' Aexp .                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 46
	num            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'}'            reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	val            reduce using rule 46
	var            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'>'            reduce using rule 46
	">="           reduce using rule 46
	'<'            reduce using rule 46
	"<="           reduce using rule 46
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	print          reduce using rule 46


State 52

	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp '+' Aexp .                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 45
	num            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'}'            reduce using rule 45
	if             reduce using rule 45
	while          reduce using rule 45
	val            reduce using rule 45
	var            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'>'            reduce using rule 45
	">="           reduce using rule 45
	'<'            reduce using rule 45
	"<="           reduce using rule 45
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	print          reduce using rule 45


State 53

	Assign -> id "%=" Aexp .                            (rule 32)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 32
	num            reduce using rule 32
	'('            reduce using rule 32
	'}'            reduce using rule 32
	if             reduce using rule 32
	while          reduce using rule 32
	val            reduce using rule 32
	var            reduce using rule 32
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 32


State 54

	Assign -> id "/=" Aexp .                            (rule 31)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 31
	num            reduce using rule 31
	'('            reduce using rule 31
	'}'            reduce using rule 31
	if             reduce using rule 31
	while          reduce using rule 31
	val            reduce using rule 31
	var            reduce using rule 31
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 31


State 55

	Assign -> id "*=" Aexp .                            (rule 30)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 30
	num            reduce using rule 30
	'('            reduce using rule 30
	'}'            reduce using rule 30
	if             reduce using rule 30
	while          reduce using rule 30
	val            reduce using rule 30
	var            reduce using rule 30
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 30


State 56

	Assign -> id "-=" Aexp .                            (rule 29)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 29
	num            reduce using rule 29
	'('            reduce using rule 29
	'}'            reduce using rule 29
	if             reduce using rule 29
	while          reduce using rule 29
	val            reduce using rule 29
	var            reduce using rule 29
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 29


State 57

	Assign -> id "+=" Aexp .                            (rule 28)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 28
	num            reduce using rule 28
	'('            reduce using rule 28
	'}'            reduce using rule 28
	if             reduce using rule 28
	while          reduce using rule 28
	val            reduce using rule 28
	var            reduce using rule 28
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 28


State 58

	Assign -> id '=' Aexp .                             (rule 27)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 27
	num            reduce using rule 27
	'('            reduce using rule 27
	'}'            reduce using rule 27
	if             reduce using rule 27
	while          reduce using rule 27
	val            reduce using rule 27
	var            reduce using rule 27
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 27


State 59

	AtomicAexp -> '(' Aexp ')' .                        (rule 60)

	id             reduce using rule 60
	num            reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	if             reduce using rule 60
	while          reduce using rule 60
	val            reduce using rule 60
	var            reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'%'            reduce using rule 60
	'>'            reduce using rule 60
	">="           reduce using rule 60
	'<'            reduce using rule 60
	"<="           reduce using rule 60
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"++"           reduce using rule 60
	"--"           reduce using rule 60
	print          reduce using rule 60


State 60

	If -> if '(' Expr . ')' '{' Commands '}'            (rule 13)
	If -> if '(' Expr . ')' '{' Commands '}' else '{' Commands '}'    (rule 14)

	')'            shift, and enter state 103


State 61

	Expr -> BoolExpr .                                  (rule 33)

	id             reduce using rule 33
	num            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'}'            reduce using rule 33
	if             reduce using rule 33
	while          reduce using rule 33
	val            reduce using rule 33
	var            reduce using rule 33
	print          reduce using rule 33


State 62

	Expr -> Aexp .                                      (rule 34)
	BoolExpr -> Aexp . '>' Aexp                         (rule 37)
	BoolExpr -> Aexp . ">=" Aexp                        (rule 38)
	BoolExpr -> Aexp . '<' Aexp                         (rule 39)
	BoolExpr -> Aexp . "<=" Aexp                        (rule 40)
	BoolExpr -> Aexp . "==" Aexp                        (rule 41)
	BoolExpr -> Aexp . "!=" Aexp                        (rule 42)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 34
	num            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'}'            reduce using rule 34
	if             reduce using rule 34
	while          reduce using rule 34
	val            reduce using rule 34
	var            reduce using rule 34
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	'<'            shift, and enter state 99
	"<="           shift, and enter state 100
	"=="           shift, and enter state 101
	"!="           shift, and enter state 102
	print          reduce using rule 34


State 63

	BoolExpr -> AtomicBool . "&&" AtomicBool            (rule 35)
	BoolExpr -> AtomicBool . "||" AtomicBool            (rule 36)
	BoolExpr -> AtomicBool .                            (rule 44)

	id             reduce using rule 44
	num            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'}'            reduce using rule 44
	if             reduce using rule 44
	while          reduce using rule 44
	val            reduce using rule 44
	var            reduce using rule 44
	"&&"           shift, and enter state 95
	"||"           shift, and enter state 96
	print          reduce using rule 44


State 64

	AtomicBool -> id .                                  (rule 56)
	AtomicAexp -> id .                                  (rule 59)

	id             reduce using rule 59
			(reduce using rule 56)

	num            reduce using rule 59
			(reduce using rule 56)

	'('            reduce using rule 59
			(reduce using rule 56)

	')'            reduce using rule 59
			(reduce using rule 56)

	'}'            reduce using rule 59
			(reduce using rule 56)

	if             reduce using rule 59
			(reduce using rule 56)

	while          reduce using rule 59
			(reduce using rule 56)

	val            reduce using rule 59
			(reduce using rule 56)

	var            reduce using rule 59
			(reduce using rule 56)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'>'            reduce using rule 59
	">="           reduce using rule 59
	'<'            reduce using rule 59
	"<="           reduce using rule 59
	"=="           reduce using rule 59
	"!="           reduce using rule 59
	"&&"           reduce using rule 56
	"||"           reduce using rule 56
	"++"           reduce using rule 59
	"--"           reduce using rule 59
	print          reduce using rule 59
			(reduce using rule 56)



State 65

	AtomicBool -> '(' . BoolExpr ')'                    (rule 57)
	AtomicAexp -> '(' . Aexp ')'                        (rule 60)

	id             shift, and enter state 64
	num            shift, and enter state 19
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68

	BoolExpr       goto state 93
	Aexp           goto state 94
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17

State 66

	BoolExpr -> '!' . BoolExpr                          (rule 43)

	id             shift, and enter state 64
	num            shift, and enter state 19
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68

	BoolExpr       goto state 91
	Aexp           goto state 92
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17

State 67

	AtomicBool -> true .                                (rule 54)

	id             reduce using rule 54
	num            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	if             reduce using rule 54
	while          reduce using rule 54
	val            reduce using rule 54
	var            reduce using rule 54
	"&&"           reduce using rule 54
	"||"           reduce using rule 54
	print          reduce using rule 54


State 68

	AtomicBool -> false .                               (rule 55)

	id             reduce using rule 55
	num            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	if             reduce using rule 55
	while          reduce using rule 55
	val            reduce using rule 55
	var            reduce using rule 55
	"&&"           reduce using rule 55
	"||"           reduce using rule 55
	print          reduce using rule 55


State 69

	While -> while '(' Expr . ')' '{' Commands '}'      (rule 15)

	')'            shift, and enter state 90


State 70

	Decl -> val id '=' . InitExp                        (rule 24)

	id             shift, and enter state 64
	num            shift, and enter state 19
	str            shift, and enter state 78
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68
	readln         shift, and enter state 79

	Readln         goto state 74
	InitExp        goto state 89
	Expr           goto state 76
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17
	Sexp           goto state 77

State 71

	Decl -> val id ':' . Type '=' InitExp               (rule 26)

	int            shift, and enter state 83
	float          shift, and enter state 84
	boolean        shift, and enter state 85
	string         shift, and enter state 86

	Type           goto state 88

State 72

	Decl -> var id '=' . InitExp                        (rule 23)

	id             shift, and enter state 64
	num            shift, and enter state 19
	str            shift, and enter state 78
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68
	readln         shift, and enter state 79

	Readln         goto state 74
	InitExp        goto state 87
	Expr           goto state 76
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17
	Sexp           goto state 77

State 73

	Decl -> var id ':' . Type '=' InitExp               (rule 25)

	int            shift, and enter state 83
	float          shift, and enter state 84
	boolean        shift, and enter state 85
	string         shift, and enter state 86

	Type           goto state 82

State 74

	InitExp -> Readln .                                 (rule 22)

	id             reduce using rule 22
	num            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'}'            reduce using rule 22
	if             reduce using rule 22
	while          reduce using rule 22
	val            reduce using rule 22
	var            reduce using rule 22
	print          reduce using rule 22


State 75

	Print -> print '(' InitExp . ')'                    (rule 12)

	')'            shift, and enter state 81


State 76

	InitExp -> Expr .                                   (rule 20)

	id             reduce using rule 20
	num            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'}'            reduce using rule 20
	if             reduce using rule 20
	while          reduce using rule 20
	val            reduce using rule 20
	var            reduce using rule 20
	print          reduce using rule 20


State 77

	InitExp -> Sexp .                                   (rule 21)

	id             reduce using rule 21
	num            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'}'            reduce using rule 21
	if             reduce using rule 21
	while          reduce using rule 21
	val            reduce using rule 21
	var            reduce using rule 21
	print          reduce using rule 21


State 78

	Sexp -> str .                                       (rule 61)

	id             reduce using rule 61
	num            reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'}'            reduce using rule 61
	if             reduce using rule 61
	while          reduce using rule 61
	val            reduce using rule 61
	var            reduce using rule 61
	print          reduce using rule 61


State 79

	Readln -> readln . '(' ')'                          (rule 11)

	'('            shift, and enter state 80


State 80

	Readln -> readln '(' . ')'                          (rule 11)

	')'            shift, and enter state 119


State 81

	Print -> print '(' InitExp ')' .                    (rule 12)

	id             reduce using rule 12
	num            reduce using rule 12
	'('            reduce using rule 12
	'}'            reduce using rule 12
	if             reduce using rule 12
	while          reduce using rule 12
	val            reduce using rule 12
	var            reduce using rule 12
	print          reduce using rule 12


State 82

	Decl -> var id ':' Type . '=' InitExp               (rule 25)

	'='            shift, and enter state 118


State 83

	Type -> int .                                       (rule 16)

	'='            reduce using rule 16


State 84

	Type -> float .                                     (rule 17)

	'='            reduce using rule 17


State 85

	Type -> boolean .                                   (rule 18)

	'='            reduce using rule 18


State 86

	Type -> string .                                    (rule 19)

	'='            reduce using rule 19


State 87

	Decl -> var id '=' InitExp .                        (rule 23)

	id             reduce using rule 23
	num            reduce using rule 23
	'('            reduce using rule 23
	'}'            reduce using rule 23
	if             reduce using rule 23
	while          reduce using rule 23
	val            reduce using rule 23
	var            reduce using rule 23
	print          reduce using rule 23


State 88

	Decl -> val id ':' Type . '=' InitExp               (rule 26)

	'='            shift, and enter state 117


State 89

	Decl -> val id '=' InitExp .                        (rule 24)

	id             reduce using rule 24
	num            reduce using rule 24
	'('            reduce using rule 24
	'}'            reduce using rule 24
	if             reduce using rule 24
	while          reduce using rule 24
	val            reduce using rule 24
	var            reduce using rule 24
	print          reduce using rule 24


State 90

	While -> while '(' Expr ')' . '{' Commands '}'      (rule 15)

	'{'            shift, and enter state 116


State 91

	BoolExpr -> '!' BoolExpr .                          (rule 43)

	id             reduce using rule 43
	num            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'}'            reduce using rule 43
	if             reduce using rule 43
	while          reduce using rule 43
	val            reduce using rule 43
	var            reduce using rule 43
	print          reduce using rule 43


State 92

	BoolExpr -> Aexp . '>' Aexp                         (rule 37)
	BoolExpr -> Aexp . ">=" Aexp                        (rule 38)
	BoolExpr -> Aexp . '<' Aexp                         (rule 39)
	BoolExpr -> Aexp . "<=" Aexp                        (rule 40)
	BoolExpr -> Aexp . "==" Aexp                        (rule 41)
	BoolExpr -> Aexp . "!=" Aexp                        (rule 42)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	'<'            shift, and enter state 99
	"<="           shift, and enter state 100
	"=="           shift, and enter state 101
	"!="           shift, and enter state 102


State 93

	AtomicBool -> '(' BoolExpr . ')'                    (rule 57)

	')'            shift, and enter state 115


State 94

	BoolExpr -> Aexp . '>' Aexp                         (rule 37)
	BoolExpr -> Aexp . ">=" Aexp                        (rule 38)
	BoolExpr -> Aexp . '<' Aexp                         (rule 39)
	BoolExpr -> Aexp . "<=" Aexp                        (rule 40)
	BoolExpr -> Aexp . "==" Aexp                        (rule 41)
	BoolExpr -> Aexp . "!=" Aexp                        (rule 42)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)
	AtomicAexp -> '(' Aexp . ')'                        (rule 60)

	')'            shift, and enter state 59
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	'<'            shift, and enter state 99
	"<="           shift, and enter state 100
	"=="           shift, and enter state 101
	"!="           shift, and enter state 102


State 95

	BoolExpr -> AtomicBool "&&" . AtomicBool            (rule 35)

	id             shift, and enter state 112
	'('            shift, and enter state 113
	true           shift, and enter state 67
	false          shift, and enter state 68

	AtomicBool     goto state 114

State 96

	BoolExpr -> AtomicBool "||" . AtomicBool            (rule 36)

	id             shift, and enter state 112
	'('            shift, and enter state 113
	true           shift, and enter state 67
	false          shift, and enter state 68

	AtomicBool     goto state 111

State 97

	BoolExpr -> Aexp '>' . Aexp                         (rule 37)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 110
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 98

	BoolExpr -> Aexp ">=" . Aexp                        (rule 38)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 109
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 99

	BoolExpr -> Aexp '<' . Aexp                         (rule 39)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 108
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 100

	BoolExpr -> Aexp "<=" . Aexp                        (rule 40)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 107
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 101

	BoolExpr -> Aexp "==" . Aexp                        (rule 41)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 106
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 102

	BoolExpr -> Aexp "!=" . Aexp                        (rule 42)

	id             shift, and enter state 32
	num            shift, and enter state 19
	'('            shift, and enter state 20

	Aexp           goto state 105
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 103

	If -> if '(' Expr ')' . '{' Commands '}'            (rule 13)
	If -> if '(' Expr ')' . '{' Commands '}' else '{' Commands '}'    (rule 14)

	'{'            shift, and enter state 104


State 104

	If -> if '(' Expr ')' '{' . Commands '}'            (rule 13)
	If -> if '(' Expr ')' '{' . Commands '}' else '{' Commands '}'    (rule 14)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	print          shift, and enter state 25

	Commands       goto state 123
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Aexp           goto state 15
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 105

	BoolExpr -> Aexp "!=" Aexp .                        (rule 42)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 42
	num            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'}'            reduce using rule 42
	if             reduce using rule 42
	while          reduce using rule 42
	val            reduce using rule 42
	var            reduce using rule 42
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 42


State 106

	BoolExpr -> Aexp "==" Aexp .                        (rule 41)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 41
	num            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	if             reduce using rule 41
	while          reduce using rule 41
	val            reduce using rule 41
	var            reduce using rule 41
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 41


State 107

	BoolExpr -> Aexp "<=" Aexp .                        (rule 40)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 40
	num            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	if             reduce using rule 40
	while          reduce using rule 40
	val            reduce using rule 40
	var            reduce using rule 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 40


State 108

	BoolExpr -> Aexp '<' Aexp .                         (rule 39)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 39
	num            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	if             reduce using rule 39
	while          reduce using rule 39
	val            reduce using rule 39
	var            reduce using rule 39
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 39


State 109

	BoolExpr -> Aexp ">=" Aexp .                        (rule 38)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 38
	num            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	if             reduce using rule 38
	while          reduce using rule 38
	val            reduce using rule 38
	var            reduce using rule 38
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 38


State 110

	BoolExpr -> Aexp '>' Aexp .                         (rule 37)
	Aexp -> Aexp . '+' Aexp                             (rule 45)
	Aexp -> Aexp . '-' Aexp                             (rule 46)
	Aexp -> Aexp . '*' Aexp                             (rule 47)
	Aexp -> Aexp . '/' Aexp                             (rule 48)
	Aexp -> Aexp . '%' Aexp                             (rule 49)

	id             reduce using rule 37
	num            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	if             reduce using rule 37
	while          reduce using rule 37
	val            reduce using rule 37
	var            reduce using rule 37
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	print          reduce using rule 37


State 111

	BoolExpr -> AtomicBool "||" AtomicBool .            (rule 36)

	id             reduce using rule 36
	num            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'}'            reduce using rule 36
	if             reduce using rule 36
	while          reduce using rule 36
	val            reduce using rule 36
	var            reduce using rule 36
	print          reduce using rule 36


State 112

	AtomicBool -> id .                                  (rule 56)

	id             reduce using rule 56
	num            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	if             reduce using rule 56
	while          reduce using rule 56
	val            reduce using rule 56
	var            reduce using rule 56
	print          reduce using rule 56


State 113

	AtomicBool -> '(' . BoolExpr ')'                    (rule 57)

	id             shift, and enter state 64
	num            shift, and enter state 19
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68

	BoolExpr       goto state 93
	Aexp           goto state 92
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17

State 114

	BoolExpr -> AtomicBool "&&" AtomicBool .            (rule 35)

	id             reduce using rule 35
	num            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'}'            reduce using rule 35
	if             reduce using rule 35
	while          reduce using rule 35
	val            reduce using rule 35
	var            reduce using rule 35
	print          reduce using rule 35


State 115

	AtomicBool -> '(' BoolExpr ')' .                    (rule 57)

	id             reduce using rule 57
	num            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	if             reduce using rule 57
	while          reduce using rule 57
	val            reduce using rule 57
	var            reduce using rule 57
	"&&"           reduce using rule 57
	"||"           reduce using rule 57
	print          reduce using rule 57


State 116

	While -> while '(' Expr ')' '{' . Commands '}'      (rule 15)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	print          shift, and enter state 25

	Commands       goto state 122
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Aexp           goto state 15
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 117

	Decl -> val id ':' Type '=' . InitExp               (rule 26)

	id             shift, and enter state 64
	num            shift, and enter state 19
	str            shift, and enter state 78
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68
	readln         shift, and enter state 79

	Readln         goto state 74
	InitExp        goto state 121
	Expr           goto state 76
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17
	Sexp           goto state 77

State 118

	Decl -> var id ':' Type '=' . InitExp               (rule 25)

	id             shift, and enter state 64
	num            shift, and enter state 19
	str            shift, and enter state 78
	'('            shift, and enter state 65
	'!'            shift, and enter state 66
	true           shift, and enter state 67
	false          shift, and enter state 68
	readln         shift, and enter state 79

	Readln         goto state 74
	InitExp        goto state 120
	Expr           goto state 76
	BoolExpr       goto state 61
	Aexp           goto state 62
	PostIncDecExp  goto state 16
	AtomicBool     goto state 63
	AtomicAexp     goto state 17
	Sexp           goto state 77

State 119

	Readln -> readln '(' ')' .                          (rule 11)

	id             reduce using rule 11
	num            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	'}'            reduce using rule 11
	if             reduce using rule 11
	while          reduce using rule 11
	val            reduce using rule 11
	var            reduce using rule 11
	print          reduce using rule 11


State 120

	Decl -> var id ':' Type '=' InitExp .               (rule 25)

	id             reduce using rule 25
	num            reduce using rule 25
	'('            reduce using rule 25
	'}'            reduce using rule 25
	if             reduce using rule 25
	while          reduce using rule 25
	val            reduce using rule 25
	var            reduce using rule 25
	print          reduce using rule 25


State 121

	Decl -> val id ':' Type '=' InitExp .               (rule 26)

	id             reduce using rule 26
	num            reduce using rule 26
	'('            reduce using rule 26
	'}'            reduce using rule 26
	if             reduce using rule 26
	while          reduce using rule 26
	val            reduce using rule 26
	var            reduce using rule 26
	print          reduce using rule 26


State 122

	While -> while '(' Expr ')' '{' Commands . '}'      (rule 15)

	'}'            shift, and enter state 125


State 123

	If -> if '(' Expr ')' '{' Commands . '}'            (rule 13)
	If -> if '(' Expr ')' '{' Commands . '}' else '{' Commands '}'    (rule 14)

	'}'            shift, and enter state 124


State 124

	If -> if '(' Expr ')' '{' Commands '}' .            (rule 13)
	If -> if '(' Expr ')' '{' Commands '}' . else '{' Commands '}'    (rule 14)

	id             reduce using rule 13
	num            reduce using rule 13
	'('            reduce using rule 13
	'}'            reduce using rule 13
	if             reduce using rule 13
	else           shift, and enter state 126
	while          reduce using rule 13
	val            reduce using rule 13
	var            reduce using rule 13
	print          reduce using rule 13


State 125

	While -> while '(' Expr ')' '{' Commands '}' .      (rule 15)

	id             reduce using rule 15
	num            reduce using rule 15
	'('            reduce using rule 15
	'}'            reduce using rule 15
	if             reduce using rule 15
	while          reduce using rule 15
	val            reduce using rule 15
	var            reduce using rule 15
	print          reduce using rule 15


State 126

	If -> if '(' Expr ')' '{' Commands '}' else . '{' Commands '}'    (rule 14)

	'{'            shift, and enter state 127


State 127

	If -> if '(' Expr ')' '{' Commands '}' else '{' . Commands '}'    (rule 14)

	id             shift, and enter state 18
	num            shift, and enter state 19
	'('            shift, and enter state 20
	'}'            reduce using rule 4
	if             shift, and enter state 21
	while          shift, and enter state 22
	val            shift, and enter state 23
	var            shift, and enter state 24
	print          shift, and enter state 25

	Commands       goto state 128
	Command        goto state 9
	Print          goto state 10
	If             goto state 11
	While          goto state 12
	Decl           goto state 13
	Assign         goto state 14
	Aexp           goto state 15
	PostIncDecExp  goto state 16
	AtomicAexp     goto state 17

State 128

	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands . '}'    (rule 14)

	'}'            shift, and enter state 129


State 129

	If -> if '(' Expr ')' '{' Commands '}' else '{' Commands '}' .    (rule 14)

	id             reduce using rule 14
	num            reduce using rule 14
	'('            reduce using rule 14
	'}'            reduce using rule 14
	if             reduce using rule 14
	while          reduce using rule 14
	val            reduce using rule 14
	var            reduce using rule 14
	print          reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 62
Number of terminals: 45
Number of non-terminals: 19
Number of states: 130
